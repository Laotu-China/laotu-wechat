{"version":3,"sources":["index.js","foreignNames.json"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;ACFA,ADGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["/*\n  Module dependencies\n*/\nvar ElementType = require('domelementtype');\nvar entities = require('entities');\n\n/* mixed-case SVG and MathML tags & attributes\n   recognized by the HTML parser, see\n   https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n*/\nvar foreignNames = require('./foreignNames.json');\nforeignNames.elementNames.__proto__ = null; /* use as a simple dictionary */\nforeignNames.attributeNames.__proto__ = null;\n\nvar unencodedElements = {\n  __proto__: null,\n  style: true,\n  script: true,\n  xmp: true,\n  iframe: true,\n  noembed: true,\n  noframes: true,\n  plaintext: true,\n  noscript: true\n};\n\n/*\n  Format attributes\n*/\nfunction formatAttrs(attributes, opts) {\n  if (!attributes) return;\n\n  var output = '';\n  var value;\n\n  // Loop through the attributes\n  for (var key in attributes) {\n    value = attributes[key];\n    if (output) {\n      output += ' ';\n    }\n\n    if (opts.xmlMode === 'foreign') {\n      /* fix up mixed-case attribute names */\n      key = foreignNames.attributeNames[key] || key;\n    }\n    output += key;\n    if ((value !== null && value !== '') || opts.xmlMode) {\n      output +=\n        '=\"' +\n        (opts.decodeEntities\n          ? entities.encodeXML(value)\n          : value.replace(/\\\"/g, '&quot;')) +\n        '\"';\n    }\n  }\n\n  return output;\n}\n\n/*\n  Self-enclosing tags (stolen from node-htmlparser)\n*/\nvar singleTag = {\n  __proto__: null,\n  area: true,\n  base: true,\n  basefont: true,\n  br: true,\n  col: true,\n  command: true,\n  embed: true,\n  frame: true,\n  hr: true,\n  img: true,\n  input: true,\n  isindex: true,\n  keygen: true,\n  link: true,\n  meta: true,\n  param: true,\n  source: true,\n  track: true,\n  wbr: true\n};\n\nvar render = (module.exports = function(dom, opts) {\n  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];\n  opts = opts || {};\n\n  var output = '';\n\n  for (var i = 0; i < dom.length; i++) {\n    var elem = dom[i];\n\n    if (elem.type === 'root') output += render(elem.children, opts);\n    else if (ElementType.isTag(elem)) output += renderTag(elem, opts);\n    else if (elem.type === ElementType.Directive)\n      output += renderDirective(elem);\n    else if (elem.type === ElementType.Comment) output += renderComment(elem);\n    else if (elem.type === ElementType.CDATA) output += renderCdata(elem);\n    else output += renderText(elem, opts);\n  }\n\n  return output;\n});\n\nvar foreignModeIntegrationPoints = [\n  'mi',\n  'mo',\n  'mn',\n  'ms',\n  'mtext',\n  'annotation-xml',\n  'foreignObject',\n  'desc',\n  'title'\n];\n\nfunction renderTag(elem, opts) {\n  // Handle SVG / MathML in HTML\n  if (opts.xmlMode === 'foreign') {\n    /* fix up mixed-case element names */\n    elem.name = foreignNames.elementNames[elem.name] || elem.name;\n    /* exit foreign mode at integration points */\n    if (\n      elem.parent &&\n      foreignModeIntegrationPoints.indexOf(elem.parent.name) >= 0\n    )\n      opts = Object.assign({}, opts, { xmlMode: false });\n  }\n  if (!opts.xmlMode && ['svg', 'math'].indexOf(elem.name) >= 0) {\n    opts = Object.assign({}, opts, { xmlMode: 'foreign' });\n  }\n\n  var tag = '<' + elem.name;\n  var attribs = formatAttrs(elem.attribs, opts);\n\n  if (attribs) {\n    tag += ' ' + attribs;\n  }\n\n  if (opts.xmlMode && (!elem.children || elem.children.length === 0)) {\n    tag += '/>';\n  } else {\n    tag += '>';\n    if (elem.children) {\n      tag += render(elem.children, opts);\n    }\n\n    if (!singleTag[elem.name] || opts.xmlMode) {\n      tag += '</' + elem.name + '>';\n    }\n  }\n\n  return tag;\n}\n\nfunction renderDirective(elem) {\n  return '<' + elem.data + '>';\n}\n\nfunction renderText(elem, opts) {\n  var data = elem.data || '';\n\n  // if entities weren't decoded, no need to encode them back\n  if (\n    opts.decodeEntities &&\n    !(elem.parent && elem.parent.name in unencodedElements)\n  ) {\n    data = entities.encodeXML(data);\n  }\n\n  return data;\n}\n\nfunction renderCdata(elem) {\n  return '<![CDATA[' + elem.children[0].data + ']]>';\n}\n\nfunction renderComment(elem) {\n  return '<!--' + elem.data + '-->';\n}\n","module.exports = {\n  \"elementNames\" : {\n\"altglyph\" : \"altGlyph\",\n\"altglyphdef\" : \"altGlyphDef\",\n\"altglyphitem\" : \"altGlyphItem\",\n\"animatecolor\" : \"animateColor\",\n\"animatemotion\" : \"animateMotion\",\n\"animatetransform\" : \"animateTransform\",\n\"clippath\" : \"clipPath\",\n\"feblend\" : \"feBlend\",\n\"fecolormatrix\" : \"feColorMatrix\",\n\"fecomponenttransfer\" : \"feComponentTransfer\",\n\"fecomposite\" : \"feComposite\",\n\"feconvolvematrix\" : \"feConvolveMatrix\",\n\"fediffuselighting\" : \"feDiffuseLighting\",\n\"fedisplacementmap\" : \"feDisplacementMap\",\n\"fedistantlight\" : \"feDistantLight\",\n\"fedropshadow\" : \"feDropShadow\",\n\"feflood\" : \"feFlood\",\n\"fefunca\" : \"feFuncA\",\n\"fefuncb\" : \"feFuncB\",\n\"fefuncg\" : \"feFuncG\",\n\"fefuncr\" : \"feFuncR\",\n\"fegaussianblur\" : \"feGaussianBlur\",\n\"feimage\" : \"feImage\",\n\"femerge\" : \"feMerge\",\n\"femergenode\" : \"feMergeNode\",\n\"femorphology\" : \"feMorphology\",\n\"feoffset\" : \"feOffset\",\n\"fepointlight\" : \"fePointLight\",\n\"fespecularlighting\" : \"feSpecularLighting\",\n\"fespotlight\" : \"feSpotLight\",\n\"fetile\" : \"feTile\",\n\"feturbulence\" : \"feTurbulence\",\n\"foreignobject\" : \"foreignObject\",\n\"glyphref\" : \"glyphRef\",\n\"lineargradient\" : \"linearGradient\",\n\"radialgradient\" : \"radialGradient\",\n\"textpath\" : \"textPath\"\n  },\n  \"attributeNames\" : {\n\"definitionurl\" : \"definitionURL\",\n\"attributename\" : \"attributeName\",\n\"attributetype\" : \"attributeType\",\n\"basefrequency\" : \"baseFrequency\",\n\"baseprofile\" : \"baseProfile\",\n\"calcmode\" : \"calcMode\",\n\"clippathunits\" : \"clipPathUnits\",\n\"diffuseconstant\" : \"diffuseConstant\",\n\"edgemode\" : \"edgeMode\",\n\"filterunits\" : \"filterUnits\",\n\"glyphref\" : \"glyphRef\",\n\"gradienttransform\" : \"gradientTransform\",\n\"gradientunits\" : \"gradientUnits\",\n\"kernelmatrix\" : \"kernelMatrix\",\n\"kernelunitlength\" : \"kernelUnitLength\",\n\"keypoints\" : \"keyPoints\",\n\"keysplines\" : \"keySplines\",\n\"keytimes\" : \"keyTimes\",\n\"lengthadjust\" : \"lengthAdjust\",\n\"limitingconeangle\" : \"limitingConeAngle\",\n\"markerheight\" : \"markerHeight\",\n\"markerunits\" : \"markerUnits\",\n\"markerwidth\" : \"markerWidth\",\n\"maskcontentunits\" : \"maskContentUnits\",\n\"maskunits\" : \"maskUnits\",\n\"numoctaves\" : \"numOctaves\",\n\"pathlength\" : \"pathLength\",\n\"patterncontentunits\" : \"patternContentUnits\",\n\"patterntransform\" : \"patternTransform\",\n\"patternunits\" : \"patternUnits\",\n\"pointsatx\" : \"pointsAtX\",\n\"pointsaty\" : \"pointsAtY\",\n\"pointsatz\" : \"pointsAtZ\",\n\"preservealpha\" : \"preserveAlpha\",\n\"preserveaspectratio\" : \"preserveAspectRatio\",\n\"primitiveunits\" : \"primitiveUnits\",\n\"refx\" : \"refX\",\n\"refy\" : \"refY\",\n\"repeatcount\" : \"repeatCount\",\n\"repeatdur\" : \"repeatDur\",\n\"requiredextensions\" : \"requiredExtensions\",\n\"requiredfeatures\" : \"requiredFeatures\",\n\"specularconstant\" : \"specularConstant\",\n\"specularexponent\" : \"specularExponent\",\n\"spreadmethod\" : \"spreadMethod\",\n\"startoffset\" : \"startOffset\",\n\"stddeviation\" : \"stdDeviation\",\n\"stitchtiles\" : \"stitchTiles\",\n\"surfacescale\" : \"surfaceScale\",\n\"systemlanguage\" : \"systemLanguage\",\n\"tablevalues\" : \"tableValues\",\n\"targetx\" : \"targetX\",\n\"targety\" : \"targetY\",\n\"textlength\" : \"textLength\",\n\"viewbox\" : \"viewBox\",\n\"viewtarget\" : \"viewTarget\",\n\"xchannelselector\" : \"xChannelSelector\",\n\"ychannelselector\" : \"yChannelSelector\",\n\"zoomandpan\" : \"zoomAndPan\"\n  }\n}\n"]}