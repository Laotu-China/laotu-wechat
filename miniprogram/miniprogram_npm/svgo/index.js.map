{"version":3,"sources":["svgo.js","svgo/config.js","svgo/svg2js.js","svgo/jsAPI.js","svgo/css-select-adapter.js","svgo/css-class-list.js","svgo/css-style-declaration.js","css-tools.js","svgo/plugins.js","svgo/tools.js","svgo/js2svg.js","../plugins/_collections.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AGTA,ADGA,ADGA;AFOA,ACHA,AGTA,ADGA,ADGA;AFOA,ACHA,AGTA,ADGA,ADGA;AFOA,ACHA,AIZA,ADGA,ADGA,ADGA;AFOA,ACHA,AIZA,ADGA,ADGA,ADGA;AFOA,ACHA,AIZA,ADGA,ADGA,ADGA;AFOA,ACHA,AIZA,ADGA,AENA,AHSA,ADGA;AFOA,ACHA,AIZA,ADGA,AENA,AHSA,ADGA;AFOA,ACHA,AIZA,ADGA,AENA,AHSA,ADGA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,ADGA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,ADGA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,ADGA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,AKfA,ANkBA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,AKfA,ANkBA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,AKfA,ANkBA;AKdA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,AKfA,ANkBA,AOrBA;AFOA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,AKfA,ANkBA,AOrBA;AFOA,APqBA,ACHA,AIZA,ADGA,AENA,AHSA,AKfA,ANkBA,AOrBA;AFOA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AFOA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AFOA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ADGA,AENA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,APqBA,ACHA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,AKfA,ANkBA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AIZA,ACHA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA,AOrBA;AELA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA,ADGA;AS1BA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AJYA,ANkBA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,AV8BA,AKfA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ALeA,AIZA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ADGA,APqBA;AQvBA,ARwBA;AQvBA,ARwBA;AQvBA,ARwBA;AQvfile":"index.js","sourcesContent":["\n\n/**\n * SVGO is a Nodejs-based tool for optimizing SVG vector graphics files.\n *\n * @see https://github.com/svg/svgo\n *\n * @author Kir Belevich <kir@soulshine.in> (https://github.com/deepsweet)\n * @copyright © 2012 Kir Belevich\n * @license MIT https://raw.githubusercontent.com/svg/svgo/master/LICENSE\n */\n\nvar CONFIG = require('./svgo/config.js'),\n    SVG2JS = require('./svgo/svg2js.js'),\n    PLUGINS = require('./svgo/plugins.js'),\n    JSAPI = require('./svgo/jsAPI.js'),\n    encodeSVGDatauri = require('./svgo/tools.js').encodeSVGDatauri,\n    JS2SVG = require('./svgo/js2svg.js');\n\nvar SVGO = function(config) {\n    this.config = CONFIG(config);\n};\n\nSVGO.prototype.optimize = function(svgstr, info) {\n    info = info || {};\n    return new Promise((resolve, reject) => {\n        if (this.config.error) {\n            reject(this.config.error);\n            return;\n        }\n\n        var config = this.config,\n            maxPassCount = config.multipass ? 10 : 1,\n            counter = 0,\n            prevResultSize = Number.POSITIVE_INFINITY,\n            optimizeOnceCallback = (svgjs) => {\n                if (svgjs.error) {\n                    reject(svgjs.error);\n                    return;\n                }\n\n                info.multipassCount = counter;\n                if (++counter < maxPassCount && svgjs.data.length < prevResultSize) {\n                    prevResultSize = svgjs.data.length;\n                    this._optimizeOnce(svgjs.data, info, optimizeOnceCallback);\n                } else {\n                    if (config.datauri) {\n                        svgjs.data = encodeSVGDatauri(svgjs.data, config.datauri);\n                    }\n                    if (info && info.path) {\n                        svgjs.path = info.path;\n                    }\n                    resolve(svgjs);\n                }\n            };\n\n        this._optimizeOnce(svgstr, info, optimizeOnceCallback);\n    });\n};\n\nSVGO.prototype._optimizeOnce = function(svgstr, info, callback) {\n    var config = this.config;\n\n    SVG2JS(svgstr, function(svgjs) {\n        if (svgjs.error) {\n            callback(svgjs);\n            return;\n        }\n\n        svgjs = PLUGINS(svgjs, info, config.plugins);\n\n        callback(JS2SVG(svgjs, config.js2svg));\n    });\n};\n\n/**\n * The factory that creates a content item with the helper methods.\n *\n * @param {Object} data which passed to jsAPI constructor\n * @returns {JSAPI} content item\n */\nSVGO.prototype.createContentItem = function(data) {\n    return new JSAPI(data);\n};\n\nSVGO.Config = CONFIG;\n\nmodule.exports = SVGO;\n// Offer ES module interop compatibility.\nmodule.exports.default = SVGO;\n","\n\nvar FS = require('fs');\nvar PATH = require('path');\nvar yaml = require('js-yaml');\n\n/**\n * Read and/or extend/replace default config file,\n * prepare and optimize plugins array.\n *\n * @param {Object} [config] input config\n * @return {Object} output config\n */\nmodule.exports = function(config) {\n\n    var defaults;\n    config = typeof config == 'object' && config || {};\n\n    if (config.plugins && !Array.isArray(config.plugins)) {\n        return { error: 'Error: Invalid plugins list. Provided \\'plugins\\' in config should be an array.' };\n    }\n\n    if (config.full) {\n        defaults = config;\n\n        if (Array.isArray(defaults.plugins)) {\n            defaults.plugins = preparePluginsArray(config, defaults.plugins);\n        }\n    } else {\n        defaults = Object.assign({}, yaml.safeLoad(FS.readFileSync(__dirname + '/../../.svgo.yml', 'utf8')));\n        defaults.plugins = preparePluginsArray(config, defaults.plugins || []);\n        defaults = extendConfig(defaults, config);\n    }\n\n    if ('floatPrecision' in config && Array.isArray(defaults.plugins)) {\n        defaults.plugins.forEach(function(plugin) {\n            if (plugin.params && ('floatPrecision' in plugin.params)) {\n                // Don't touch default plugin params\n                plugin.params = Object.assign({}, plugin.params, { floatPrecision: config.floatPrecision });\n            }\n        });\n    }\n\n    if ('datauri' in config) {\n        defaults.datauri = config.datauri;\n    }\n\n    if (Array.isArray(defaults.plugins)) {\n        defaults.plugins = optimizePluginsArray(defaults.plugins);\n    }\n\n    return defaults;\n\n};\n\n/**\n * Require() all plugins in array.\n *\n * @param {Object} config\n * @param {Array} plugins input plugins array\n * @return {Array} input plugins array of arrays\n */\nfunction preparePluginsArray(config, plugins) {\n\n    var plugin,\n        key;\n\n    return plugins.map(function(item) {\n\n        // {}\n        if (typeof item === 'object') {\n\n            key = Object.keys(item)[0];\n\n            // custom\n            if (typeof item[key] === 'object' && item[key].fn && typeof item[key].fn === 'function') {\n                plugin = setupCustomPlugin(key, item[key]);\n\n            } else {\n\n                plugin = setPluginActiveState(\n                    loadPlugin(config, key, item[key].path),\n                    item,\n                    key\n                );\n                plugin.name = key;\n            }\n\n        // name\n        } else {\n\n            plugin = loadPlugin(config, item);\n            plugin.name = item;\n            if (typeof plugin.params === 'object') {\n                plugin.params = Object.assign({}, plugin.params);\n            }\n\n        }\n\n        return plugin;\n\n    });\n\n}\n\n/**\n * Extend plugins with the custom config object.\n *\n * @param {Array} plugins input plugins\n * @param {Object} config config\n * @return {Array} output plugins\n */\nfunction extendConfig(defaults, config) {\n\n    var key;\n\n    // plugins\n    if (config.plugins) {\n\n        config.plugins.forEach(function(item) {\n\n            // {}\n            if (typeof item === 'object') {\n\n                key = Object.keys(item)[0];\n\n                if (item[key] == null) {\n                    console.error(`Error: '${key}' plugin is misconfigured! Have you padded its content in YML properly?\\n`);\n                }\n\n                // custom\n                if (typeof item[key] === 'object' && item[key].fn && typeof item[key].fn === 'function') {\n                    defaults.plugins.push(setupCustomPlugin(key, item[key]));\n\n                // plugin defined via path\n                } else if (typeof item[key] === 'object' && item[key].path) {\n                    defaults.plugins.push(setPluginActiveState(loadPlugin(config, undefined, item[key].path), item, key));\n\n                } else {\n                    defaults.plugins.forEach(function(plugin) {\n\n                        if (plugin.name === key) {\n                            plugin = setPluginActiveState(plugin, item, key);\n                        }\n                    });\n                }\n\n            }\n\n        });\n\n    }\n\n    defaults.multipass = config.multipass;\n\n    // svg2js\n    if (config.svg2js) {\n        defaults.svg2js = config.svg2js;\n    }\n\n    // js2svg\n    if (config.js2svg) {\n        defaults.js2svg = config.js2svg;\n    }\n\n    return defaults;\n\n}\n\n/**\n * Setup and enable a custom plugin\n *\n * @param {String} plugin name\n * @param {Object} custom plugin\n * @return {Array} enabled plugin\n */\nfunction setupCustomPlugin(name, plugin) {\n    plugin.active = true;\n    plugin.params = Object.assign({}, plugin.params || {});\n    plugin.name = name;\n\n    return plugin;\n}\n\n/**\n * Try to group sequential elements of plugins array.\n *\n * @param {Object} plugins input plugins\n * @return {Array} output plugins\n */\nfunction optimizePluginsArray(plugins) {\n\n    var prev;\n\n    return plugins.reduce(function(plugins, item) {\n        if (prev && item.type == prev[0].type) {\n            prev.push(item);\n        } else {\n            plugins.push(prev = [item]);\n        }\n        return plugins;\n    }, []);\n\n}\n\n/**\n * Sets plugin to active or inactive state.\n *\n * @param {Object} plugin\n * @param {Object} item\n * @param {Object} key\n * @return {Object} plugin\n */\nfunction setPluginActiveState(plugin, item, key) {\n    // name: {}\n    if (typeof item[key] === 'object') {\n        plugin.params = Object.assign({}, plugin.params || {}, item[key]);\n        plugin.active = true;\n\n    // name: false\n    } else if (item[key] === false) {\n        plugin.active = false;\n\n    // name: true\n    } else if (item[key] === true) {\n        plugin.active = true;\n    }\n\n    return plugin;\n}\n\n/**\n * Loads default plugin using name or custom plugin defined via path in config.\n *\n * @param {Object} config\n * @param {Object} name\n * @param {Object} path\n * @return {Object} plugin\n */\nfunction loadPlugin(config, name, path) {\n    var plugin;\n\n    if (!path) {\n        plugin = require('../../plugins/' + name);\n    } else {\n        plugin = require(PATH.resolve(config.__DIR, path));\n    }\n\n    return Object.assign({}, plugin);\n}\n","\n\nvar SAX = require('sax'),\n    JSAPI = require('./jsAPI.js'),\n    CSSClassList = require('./css-class-list'),\n    CSSStyleDeclaration = require('./css-style-declaration'),\n    entityDeclaration = /<!ENTITY\\s+(\\S+)\\s+(?:'([^\\']+)'|\"([^\\\"]+)\")\\s*>/g;\n\nvar config = {\n    strict: true,\n    trim: false,\n    normalize: true,\n    lowercase: true,\n    xmlns: true,\n    position: true\n};\n\n/**\n * Convert SVG (XML) string to SVG-as-JS object.\n *\n * @param {String} data input data\n * @param {Function} callback\n */\nmodule.exports = function(data, callback) {\n\n    var sax = SAX.parser(config.strict, config),\n        root = new JSAPI({ elem: '#document', content: [] }),\n        current = root,\n        stack = [root],\n        textContext = null,\n        parsingError = false;\n\n    function pushToContent(content) {\n\n        content = new JSAPI(content, current);\n\n        (current.content = current.content || []).push(content);\n\n        return content;\n\n    }\n\n    sax.ondoctype = function(doctype) {\n\n        pushToContent({\n            doctype: doctype\n        });\n\n        var subsetStart = doctype.indexOf('['),\n            entityMatch;\n\n        if (subsetStart >= 0) {\n            entityDeclaration.lastIndex = subsetStart;\n\n            while ((entityMatch = entityDeclaration.exec(data)) != null) {\n                sax.ENTITIES[entityMatch[1]] = entityMatch[2] || entityMatch[3];\n            }\n        }\n    };\n\n    sax.onprocessinginstruction = function(data) {\n\n        pushToContent({\n            processinginstruction: data\n        });\n\n    };\n\n    sax.oncomment = function(comment) {\n\n        pushToContent({\n            comment: comment.trim()\n        });\n\n    };\n\n    sax.oncdata = function(cdata) {\n\n        pushToContent({\n            cdata: cdata\n        });\n\n    };\n\n    sax.onopentag = function(data) {\n\n        var elem = {\n            elem: data.name,\n            prefix: data.prefix,\n            local: data.local,\n            attrs: {}\n        };\n\n        elem.class = new CSSClassList(elem);\n        elem.style = new CSSStyleDeclaration(elem);\n\n        if (Object.keys(data.attributes).length) {\n            for (var name in data.attributes) {\n\n                if (name === 'class') { // has class attribute\n                    elem.class.hasClass();\n                }\n\n                if (name === 'style') { // has style attribute\n                    elem.style.hasStyle();\n                }\n\n                elem.attrs[name] = {\n                    name: name,\n                    value: data.attributes[name].value,\n                    prefix: data.attributes[name].prefix,\n                    local: data.attributes[name].local\n                };\n            }\n        }\n\n        elem = pushToContent(elem);\n        current = elem;\n\n        // Save info about <text> tag to prevent trimming of meaningful whitespace\n        if (data.name == 'text' && !data.prefix) {\n            textContext = current;\n        }\n\n        stack.push(elem);\n\n    };\n\n    sax.ontext = function(text) {\n\n        if (/\\S/.test(text) || textContext) {\n\n            if (!textContext)\n                text = text.trim();\n\n            pushToContent({\n                text: text\n            });\n\n        }\n\n    };\n\n    sax.onclosetag = function() {\n\n        var last = stack.pop();\n\n        // Trim text inside <text> tag.\n        if (last == textContext) {\n            trim(textContext);\n            textContext = null;\n        }\n        current = stack[stack.length - 1];\n\n    };\n\n    sax.onerror = function(e) {\n\n        e.message = 'Error in parsing SVG: ' + e.message;\n        if (e.message.indexOf('Unexpected end') < 0) {\n            throw e;\n        }\n\n    };\n\n    sax.onend = function() {\n\n        if (!this.error) {\n            callback(root);\n        } else {\n            callback({ error: this.error.message });\n        }\n\n    };\n\n    try {\n        sax.write(data);\n    } catch (e) {\n        callback({ error: e.message });\n        parsingError = true;\n    }\n    if (!parsingError) sax.close();\n\n    function trim(elem) {\n        if (!elem.content) return elem;\n\n        var start = elem.content[0],\n            end = elem.content[elem.content.length - 1];\n\n        while (start && start.content && !start.text) start = start.content[0];\n        if (start && start.text) start.text = start.text.replace(/^\\s+/, '');\n\n        while (end && end.content && !end.text) end = end.content[end.content.length - 1];\n        if (end && end.text) end.text = end.text.replace(/\\s+$/, '');\n\n        return elem;\n\n    }\n\n};\n","\n\nvar cssSelect = require('css-select');\n\nvar svgoCssSelectAdapter = require('./css-select-adapter');\nvar cssSelectOpts = {\n  xmlMode: true,\n  adapter: svgoCssSelectAdapter\n};\n\nvar JSAPI = module.exports = function(data, parentNode) {\n    Object.assign(this, data);\n    if (parentNode) {\n        Object.defineProperty(this, 'parentNode', {\n            writable: true,\n            value: parentNode\n        });\n    }\n};\n\n/**\n * Perform a deep clone of this node.\n *\n * @return {Object} element\n */\nJSAPI.prototype.clone = function() {\n    var node = this;\n    var nodeData = {};\n\n    Object.keys(node).forEach(function(key) {\n        if (key !== 'class' && key !== 'style' && key !== 'content') {\n            nodeData[key] = node[key];\n        }\n    });\n\n    // Deep-clone node data.\n    nodeData = JSON.parse(JSON.stringify(nodeData));\n\n    // parentNode gets set to a proper object by the parent clone,\n    // but it needs to be true/false now to do the right thing\n    // in the constructor.\n    var clonedNode = new JSAPI(nodeData, !!node.parentNode);\n\n    if (node.class) {\n        clonedNode.class = node.class.clone(clonedNode);\n    }\n    if (node.style) {\n        clonedNode.style = node.style.clone(clonedNode);\n    }\n    if (node.content) {\n        clonedNode.content = node.content.map(function(childNode) {\n            var clonedChild = childNode.clone();\n            clonedChild.parentNode = clonedNode;\n            return clonedChild;\n        });\n    }\n\n    return clonedNode;\n};\n\n/**\n * Determine if item is an element\n * (any, with a specific name or in a names array).\n *\n * @param {String|Array} [param] element name or names arrays\n * @return {Boolean}\n */\nJSAPI.prototype.isElem = function(param) {\n\n    if (!param) return !!this.elem;\n\n    if (Array.isArray(param)) return !!this.elem && (param.indexOf(this.elem) > -1);\n\n    return !!this.elem && this.elem === param;\n\n};\n\n/**\n * Renames an element\n *\n * @param {String} name new element name\n * @return {Object} element\n */\nJSAPI.prototype.renameElem = function(name) {\n\n    if (name && typeof name === 'string')\n        this.elem = this.local = name;\n\n    return this;\n\n};\n\n/**\n * Determine if element is empty.\n *\n * @return {Boolean}\n */\n JSAPI.prototype.isEmpty = function() {\n\n    return !this.content || !this.content.length;\n\n};\n\n/**\n * Find the closest ancestor of the current element.\n * @param elemName\n *\n * @return {?Object}\n */\n JSAPI.prototype.closestElem = function(elemName) {\n    var elem = this;\n\n    while ((elem = elem.parentNode) && !elem.isElem(elemName));\n\n    return elem;\n};\n\n/**\n * Changes content by removing elements and/or adding new elements.\n *\n * @param {Number} start Index at which to start changing the content.\n * @param {Number} n Number of elements to remove.\n * @param {Array|Object} [insertion] Elements to add to the content.\n * @return {Array} Removed elements.\n */\n JSAPI.prototype.spliceContent = function(start, n, insertion) {\n\n    if (arguments.length < 2) return [];\n\n    if (!Array.isArray(insertion))\n        insertion = Array.apply(null, arguments).slice(2);\n\n    insertion.forEach(function(inner) { inner.parentNode = this }, this);\n\n    return this.content.splice.apply(this.content, [start, n].concat(insertion));\n\n\n};\n\n/**\n * Determine if element has an attribute\n * (any, or by name or by name + value).\n *\n * @param {String} [name] attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Boolean}\n */\n JSAPI.prototype.hasAttr = function(name, val) {\n\n    if (!this.attrs || !Object.keys(this.attrs).length) return false;\n\n    if (!arguments.length) return !!this.attrs;\n\n    if (val !== undefined) return !!this.attrs[name] && this.attrs[name].value === val.toString();\n\n    return !!this.attrs[name];\n\n};\n\n/**\n * Determine if element has an attribute by local name\n * (any, or by name or by name + value).\n *\n * @param {String} [localName] local attribute name\n * @param {Number|String|RegExp|Function} [val] attribute value (will be toString()'ed or executed, otherwise ignored)\n * @return {Boolean}\n */\n JSAPI.prototype.hasAttrLocal = function(localName, val) {\n\n    if (!this.attrs || !Object.keys(this.attrs).length) return false;\n\n    if (!arguments.length) return !!this.attrs;\n\n    var callback;\n\n    switch (val != null && val.constructor && val.constructor.name) {\n        case 'Number':   // same as String\n        case 'String':   callback = stringValueTest; break;\n        case 'RegExp':   callback = regexpValueTest; break;\n        case 'Function': callback = funcValueTest; break;\n        default:         callback = nameTest;\n    }\n    return this.someAttr(callback);\n\n    function nameTest(attr) {\n        return attr.local === localName;\n    }\n\n    function stringValueTest(attr) {\n        return attr.local === localName && val == attr.value;\n    }\n\n    function regexpValueTest(attr) {\n        return attr.local === localName && val.test(attr.value);\n    }\n\n    function funcValueTest(attr) {\n        return attr.local === localName && val(attr.value);\n    }\n\n};\n\n/**\n * Get a specific attribute from an element\n * (by name or name + value).\n *\n * @param {String} name attribute name\n * @param {String} [val] attribute value (will be toString()'ed)\n * @return {Object|Undefined}\n */\n JSAPI.prototype.attr = function(name, val) {\n\n    if (!this.hasAttr() || !arguments.length) return undefined;\n\n    if (val !== undefined) return this.hasAttr(name, val) ? this.attrs[name] : undefined;\n\n    return this.attrs[name];\n\n};\n\n/**\n * Get computed attribute value from an element\n *\n * @param {String} name attribute name\n * @return {Object|Undefined}\n */\n JSAPI.prototype.computedAttr = function(name, val) {\n    /* jshint eqnull: true */\n    if (!arguments.length) return;\n\n    for (var elem = this; elem && (!elem.hasAttr(name) || !elem.attr(name).value); elem = elem.parentNode);\n\n    if (val != null) {\n        return elem ? elem.hasAttr(name, val) : false;\n    } else if (elem && elem.hasAttr(name)) {\n        return elem.attrs[name].value;\n    }\n\n};\n\n/**\n * Remove a specific attribute.\n *\n * @param {String|Array} name attribute name\n * @param {String} [val] attribute value\n * @return {Boolean}\n */\n JSAPI.prototype.removeAttr = function(name, val, recursive) {\n\n    if (!arguments.length) return false;\n\n    if (Array.isArray(name)) {\n        name.forEach(this.removeAttr, this);\n        return false;\n    }\n\n    if (!this.hasAttr(name)) return false;\n\n    if (!recursive && val && this.attrs[name].value !== val) return false;\n\n    delete this.attrs[name];\n\n    if (!Object.keys(this.attrs).length) delete this.attrs;\n\n    return true;\n\n};\n\n/**\n * Add attribute.\n *\n * @param {Object} [attr={}] attribute object\n * @return {Object|Boolean} created attribute or false if no attr was passed in\n */\n JSAPI.prototype.addAttr = function(attr) {\n    attr = attr || {};\n\n    if (attr.name === undefined ||\n        attr.prefix === undefined ||\n        attr.local === undefined\n    ) return false;\n\n    this.attrs = this.attrs || {};\n    this.attrs[attr.name] = attr;\n\n    if(attr.name === 'class') { // newly added class attribute\n        this.class.hasClass();\n    }\n\n    if(attr.name === 'style') { // newly added style attribute\n        this.style.hasStyle();\n    }\n\n    return this.attrs[attr.name];\n\n};\n\n/**\n * Iterates over all attributes.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\n JSAPI.prototype.eachAttr = function(callback, context) {\n\n    if (!this.hasAttr()) return false;\n\n    for (var name in this.attrs) {\n        callback.call(context, this.attrs[name]);\n    }\n\n    return true;\n\n};\n\n/**\n * Tests whether some attribute passes the test.\n *\n * @param {Function} callback callback\n * @param {Object} [context] callback context\n * @return {Boolean} false if there are no any attributes\n */\n JSAPI.prototype.someAttr = function(callback, context) {\n\n    if (!this.hasAttr()) return false;\n\n    for (var name in this.attrs) {\n        if (callback.call(context, this.attrs[name])) return true;\n    }\n\n    return false;\n\n};\n\n/**\n * Evaluate a string of CSS selectors against the element and returns matched elements.\n *\n * @param {String} selectors CSS selector(s) string\n * @return {Array} null if no elements matched\n */\n JSAPI.prototype.querySelectorAll = function(selectors) {\n\n   var matchedEls = cssSelect(selectors, this, cssSelectOpts);\n\n   return matchedEls.length > 0 ? matchedEls : null;\n\n};\n\n/**\n * Evaluate a string of CSS selectors against the element and returns only the first matched element.\n *\n * @param {String} selectors CSS selector(s) string\n * @return {Array} null if no element matched\n */\n JSAPI.prototype.querySelector = function(selectors) {\n\n   return cssSelect.selectOne(selectors, this, cssSelectOpts);\n\n};\n\n/**\n * Test if a selector matches a given element.\n *\n * @param {String} selector CSS selector string\n * @return {Boolean} true if element would be selected by selector string, false if it does not\n */\n JSAPI.prototype.matches = function(selector) {\n\n   return cssSelect.is(this, selector, cssSelectOpts);\n\n};\n","\n\nvar baseCssAdapter = require('css-select-base-adapter');\n\n/**\n * DOMUtils API for SVGO AST (used by css-select)\n */\nvar svgoCssSelectAdapterMin = {\n\n    // is the node a tag?\n    // isTag: ( node:Node ) => isTag:Boolean\n    isTag: function(node) {\n        return node.isElem();\n    },\n\n    // get the parent of the node\n    // getParent: ( node:Node ) => parentNode:Node\n    // returns null when no parent exists\n    getParent: function(node) {\n        return node.parentNode || null;\n    },\n\n    // get the node's children\n    // getChildren: ( node:Node ) => children:[Node]\n    getChildren: function(node) {\n        return node.content || [];\n    },\n\n    // get the name of the tag\n    // getName: ( elem:ElementNode ) => tagName:String\n    getName: function(elemAst) {\n        return elemAst.elem;\n    },\n\n    // get the text content of the node, and its children if it has any\n    // getText: ( node:Node ) => text:String\n    // returns empty string when there is no text\n    getText: function(node) {\n        return node.content[0].text || node.content[0].cdata || '';\n    },\n\n    // get the attribute value\n    // getAttributeValue: ( elem:ElementNode, name:String ) => value:String\n    // returns null when attribute doesn't exist\n    getAttributeValue: function(elem, name) {\n        return elem.hasAttr(name) ? elem.attr(name).value : null;\n    }\n};\n\n// use base adapter for default implementation\nvar svgoCssSelectAdapter = baseCssAdapter(svgoCssSelectAdapterMin);\n\nmodule.exports = svgoCssSelectAdapter;\n","\n\nvar values = require('object.values');\nif (!Object.values) {\n    values.shim();\n}\n\n\nvar CSSClassList = function(node) {\n    this.parentNode = node;\n    this.classNames = new Set();\n    this.classAttr = null;\n    //this.classValue = null;\n};\n\n/**\n * Performs a deep clone of this object.\n *\n * @param parentNode the parentNode to assign to the cloned result\n */\nCSSClassList.prototype.clone = function(parentNode) {\n    var node = this;\n    var nodeData = {};\n\n    Object.keys(node).forEach(function(key) {\n        if (key !== 'parentNode') {\n            nodeData[key] = node[key];\n        }\n    });\n\n    // Deep-clone node data.\n    nodeData = JSON.parse(JSON.stringify(nodeData));\n\n    var clone = new CSSClassList(parentNode);\n   Object.assign(clone, nodeData);\n    return clone;\n};\n\nCSSClassList.prototype.hasClass = function() {\n    this.classAttr = { // empty class attr\n        'name': 'class',\n        'value': null\n    };\n\n    this.addClassHandler();\n};\n\n\n// attr.class\n\nCSSClassList.prototype.addClassHandler = function() {\n\n    Object.defineProperty(this.parentNode.attrs, 'class', {\n        get: this.getClassAttr.bind(this),\n        set: this.setClassAttr.bind(this),\n        enumerable: true,\n        configurable: true\n    });\n\n    this.addClassValueHandler();\n};\n\n// attr.class.value\n\nCSSClassList.prototype.addClassValueHandler = function() {\n\n    Object.defineProperty(this.classAttr, 'value', {\n        get: this.getClassValue.bind(this),\n        set: this.setClassValue.bind(this),\n        enumerable: true,\n        configurable: true\n    });\n};\n\nCSSClassList.prototype.getClassAttr = function() {\n    return this.classAttr;\n};\n\nCSSClassList.prototype.setClassAttr = function(newClassAttr) {\n    this.setClassValue(newClassAttr.value); // must before applying value handler!\n\n    this.classAttr = newClassAttr;\n    this.addClassValueHandler();\n};\n\nCSSClassList.prototype.getClassValue = function() {\n    var arrClassNames = Array.from(this.classNames);\n    return arrClassNames.join(' ');\n};\n\nCSSClassList.prototype.setClassValue = function(newValue) {\n    if(typeof newValue === 'undefined') {\n      this.classNames.clear();\n      return;\n    }\n    var arrClassNames = newValue.split(' ');\n    this.classNames = new Set(arrClassNames);\n};\n\n\nCSSClassList.prototype.add = function(/* variadic */) {\n    this.hasClass();\n    Object.values(arguments).forEach(this._addSingle.bind(this));\n};\n\nCSSClassList.prototype._addSingle = function(className) {\n    this.classNames.add(className);\n};\n\n\nCSSClassList.prototype.remove = function(/* variadic */) {\n    this.hasClass();\n    Object.values(arguments).forEach(this._removeSingle.bind(this));\n};\n\nCSSClassList.prototype._removeSingle = function(className) {\n    this.classNames.delete(className);\n};\n\n\nCSSClassList.prototype.item = function(index) {\n    var arrClassNames = Array.from(this.classNames);\n    return arrClassNames[index];\n};\n\nCSSClassList.prototype.toggle = function(className, force) {\n    if(this.contains(className) || force === false) {\n        this.classNames.delete(className);\n    }\n    this.classNames.add(className);\n};\n\nCSSClassList.prototype.contains = function(className) {\n    return this.classNames.has(className);\n};\n\n\nmodule.exports = CSSClassList;","\n\nvar csstree = require('css-tree'),\n    csstools = require('../css-tools');\n\n\nvar CSSStyleDeclaration = function(node) {\n    this.parentNode = node;\n\n    this.properties = new Map();\n    this.hasSynced = false;\n\n    this.styleAttr = null;\n    this.styleValue = null;\n\n    this.parseError = false;\n};\n\n/**\n * Performs a deep clone of this object.\n *\n * @param parentNode the parentNode to assign to the cloned result\n */\nCSSStyleDeclaration.prototype.clone = function(parentNode) {\n    var node = this;\n    var nodeData = {};\n\n    Object.keys(node).forEach(function(key) {\n        if (key !== 'parentNode') {\n            nodeData[key] = node[key];\n        }\n    });\n\n    // Deep-clone node data.\n    nodeData = JSON.parse(JSON.stringify(nodeData));\n\n    var clone = new CSSStyleDeclaration(parentNode);\n    Object.assign(clone, nodeData);\n    return clone;\n};\n\nCSSStyleDeclaration.prototype.hasStyle = function() {\n    this.addStyleHandler();\n};\n\n\n\n\n// attr.style\n\nCSSStyleDeclaration.prototype.addStyleHandler = function() {\n\n    this.styleAttr = { // empty style attr\n        'name': 'style',\n        'value': null\n    };\n\n    Object.defineProperty(this.parentNode.attrs, 'style', {\n        get: this.getStyleAttr.bind(this),\n        set: this.setStyleAttr.bind(this),\n        enumerable: true,\n        configurable: true\n    });\n\n    this.addStyleValueHandler();\n};\n\n// attr.style.value\n\nCSSStyleDeclaration.prototype.addStyleValueHandler = function() {\n\n    Object.defineProperty(this.styleAttr, 'value', {\n        get: this.getStyleValue.bind(this),\n        set: this.setStyleValue.bind(this),\n        enumerable: true,\n        configurable: true\n    });\n};\n\nCSSStyleDeclaration.prototype.getStyleAttr = function() {\n    return this.styleAttr;\n};\n\nCSSStyleDeclaration.prototype.setStyleAttr = function(newStyleAttr) {\n    this.setStyleValue(newStyleAttr.value); // must before applying value handler!\n\n    this.styleAttr = newStyleAttr;\n    this.addStyleValueHandler();\n    this.hasSynced = false; // raw css changed\n};\n\nCSSStyleDeclaration.prototype.getStyleValue = function() {\n    return this.getCssText();\n};\n\nCSSStyleDeclaration.prototype.setStyleValue = function(newValue) {\n    this.properties.clear(); // reset all existing properties\n    this.styleValue = newValue;\n    this.hasSynced = false; // raw css changed\n};\n\n\n\n\nCSSStyleDeclaration.prototype._loadCssText = function() {\n    if (this.hasSynced) {\n        return;\n    }\n    this.hasSynced = true; // must be set here to prevent loop in setProperty(...)\n\n    if (!this.styleValue || this.styleValue.length === 0) {\n        return;\n    }\n    var inlineCssStr = this.styleValue;\n\n    var declarations = {};\n    try {\n        declarations = csstree.parse(inlineCssStr, {\n            context: 'declarationList',\n            parseValue: false\n        });\n    } catch (parseError) {\n        this.parseError = parseError;\n        return;\n    }\n    this.parseError = false;\n\n    var self = this;\n    declarations.children.each(function(declaration) {\n        try {\n          var styleDeclaration = csstools.csstreeToStyleDeclaration(declaration);\n          self.setProperty(styleDeclaration.name, styleDeclaration.value, styleDeclaration.priority);\n        } catch(styleError) {\n            if(styleError.message !== 'Unknown node type: undefined') {\n                self.parseError = styleError;\n            }\n        }\n    });\n};\n\n\n// only reads from properties\n\n/**\n * Get the textual representation of the declaration block (equivalent to .cssText attribute).\n *\n * @return {String} Textual representation of the declaration block (empty string for no properties)\n */\nCSSStyleDeclaration.prototype.getCssText = function() {\n    var properties = this.getProperties();\n\n    if (this.parseError) {\n        // in case of a parse error, pass through original styles\n        return this.styleValue;\n    }\n\n    var cssText = [];\n    properties.forEach(function(property, propertyName) {\n        var strImportant = property.priority === 'important' ? '!important' : '';\n        cssText.push(propertyName.trim() + ':' + property.value.trim() + strImportant);\n    });\n    return cssText.join(';');\n};\n\nCSSStyleDeclaration.prototype._handleParseError = function() {\n    if (this.parseError) {\n        console.warn('Warning: Parse error when parsing inline styles, style properties of this element cannot be used. The raw styles can still be get/set using .attr(\\'style\\').value. Error details: ' + this.parseError);\n    }\n};\n\n\nCSSStyleDeclaration.prototype._getProperty = function(propertyName) {\n    if(typeof propertyName === 'undefined') {\n        throw Error('1 argument required, but only 0 present.');\n    }\n\n    var properties = this.getProperties();\n    this._handleParseError();\n\n    var property = properties.get(propertyName.trim());\n    return property;\n};\n\n/**\n * Return the optional priority, \"important\".\n *\n * @param {String} propertyName representing the property name to be checked.\n * @return {String} priority that represents the priority (e.g. \"important\") if one exists. If none exists, returns the empty string.\n */\nCSSStyleDeclaration.prototype.getPropertyPriority = function(propertyName) {\n    var property = this._getProperty(propertyName);\n    return property ? property.priority : '';\n};\n\n/**\n * Return the property value given a property name.\n *\n * @param {String} propertyName representing the property name to be checked.\n * @return {String} value containing the value of the property. If not set, returns the empty string.\n */\nCSSStyleDeclaration.prototype.getPropertyValue = function(propertyName) {\n    var property = this._getProperty(propertyName);\n    return property ? property.value : null;\n};\n\n/**\n * Return a property name.\n *\n * @param {Number} index of the node to be fetched. The index is zero-based.\n * @return {String} propertyName that is the name of the CSS property at the specified index.\n */\nCSSStyleDeclaration.prototype.item = function(index) {\n    if(typeof index === 'undefined') {\n        throw Error('1 argument required, but only 0 present.');\n    }\n\n    var properties = this.getProperties();\n    this._handleParseError();\n\n    return Array.from(properties.keys())[index];\n};\n\n/**\n * Return all properties of the node.\n *\n * @return {Map} properties that is a Map with propertyName as key and property (propertyValue + propertyPriority) as value.\n */\nCSSStyleDeclaration.prototype.getProperties = function() {\n    this._loadCssText();\n    return this.properties;\n};\n\n\n// writes to properties\n\n/**\n * Remove a property from the CSS declaration block.\n *\n * @param {String} propertyName representing the property name to be removed.\n * @return {String} oldValue equal to the value of the CSS property before it was removed.\n */\nCSSStyleDeclaration.prototype.removeProperty = function(propertyName) {\n    if(typeof propertyName === 'undefined') {\n        throw Error('1 argument required, but only 0 present.');\n    }\n\n    this.hasStyle();\n\n    var properties = this.getProperties();\n    this._handleParseError();\n\n    var oldValue = this.getPropertyValue(propertyName);\n    properties.delete(propertyName.trim());\n    return oldValue;\n};\n\n/**\n * Modify an existing CSS property or creates a new CSS property in the declaration block.\n *\n * @param {String} propertyName representing the CSS property name to be modified.\n * @param {String} [value] containing the new property value. If not specified, treated as the empty string. value must not contain \"!important\" -- that should be set using the priority parameter.\n * @param {String} [priority] allowing the \"important\" CSS priority to be set. If not specified, treated as the empty string.\n * @return {undefined}\n */\nCSSStyleDeclaration.prototype.setProperty = function(propertyName, value, priority) {\n    if(typeof propertyName === 'undefined') {\n        throw Error('propertyName argument required, but only not present.');\n    }\n\n    this.hasStyle();\n\n    var properties = this.getProperties();\n    this._handleParseError();\n\n    var property = {\n        value: value.trim(),\n        priority: priority.trim()\n    };\n    properties.set(propertyName.trim(), property);\n\n    return property;\n};\n\n\nmodule.exports = CSSStyleDeclaration;\n","\n\nvar csstree     = require('css-tree'),\n    List        = csstree.List,\n    stable      = require('stable'),\n    specificity = require('csso/lib/restructure/prepare/specificity');\n\n\n/**\n * Flatten a CSS AST to a selectors list.\n *\n * @param {Object} cssAst css-tree AST to flatten\n * @return {Array} selectors\n */\nfunction flattenToSelectors(cssAst) {\n    var selectors = [];\n\n    csstree.walk(cssAst, {visit: 'Rule', enter: function(node) {\n        if (node.type !== 'Rule') {\n            return;\n        }\n\n        var atrule = this.atrule;\n        var rule = node;\n\n        node.prelude.children.each(function(selectorNode, selectorItem) {\n            var selector = {\n                item: selectorItem,\n                atrule: atrule,\n                rule: rule,\n                pseudos: []\n            };\n\n            selectorNode.children.each(function(selectorChildNode, selectorChildItem, selectorChildList) {\n                if (selectorChildNode.type === 'PseudoClassSelector' ||\n                    selectorChildNode.type === 'PseudoElementSelector') {\n                    selector.pseudos.push({\n                        item: selectorChildItem,\n                        list: selectorChildList\n                    });\n                }\n            });\n\n            selectors.push(selector);\n        });\n    }});\n\n    return selectors;\n}\n\n/**\n * Filter selectors by Media Query.\n *\n * @param {Array} selectors to filter\n * @param {Array} useMqs Array with strings of media queries that should pass (<name> <expression>)\n * @return {Array} Filtered selectors that match the passed media queries\n */\nfunction filterByMqs(selectors, useMqs) {\n    return selectors.filter(function(selector) {\n        if (selector.atrule === null) {\n            return ~useMqs.indexOf('');\n        }\n\n        var mqName = selector.atrule.name;\n        var mqStr = mqName;\n        if (selector.atrule.expression &&\n            selector.atrule.expression.children.first().type === 'MediaQueryList') {\n            var mqExpr = csstree.generate(selector.atrule.expression);\n            mqStr = [mqName, mqExpr].join(' ');\n        }\n\n        return ~useMqs.indexOf(mqStr);\n    });\n}\n\n/**\n * Filter selectors by the pseudo-elements and/or -classes they contain.\n *\n * @param {Array} selectors to filter\n * @param {Array} usePseudos Array with strings of single or sequence of pseudo-elements and/or -classes that should pass\n * @return {Array} Filtered selectors that match the passed pseudo-elements and/or -classes\n */\nfunction filterByPseudos(selectors, usePseudos) {\n    return selectors.filter(function(selector) {\n        var pseudoSelectorsStr = csstree.generate({\n            type: 'Selector',\n            children: new List().fromArray(selector.pseudos.map(function(pseudo) {\n                return pseudo.item.data;\n            }))\n        });\n        return ~usePseudos.indexOf(pseudoSelectorsStr);\n    });\n}\n\n/**\n * Remove pseudo-elements and/or -classes from the selectors for proper matching.\n *\n * @param {Array} selectors to clean\n * @return {Array} Selectors without pseudo-elements and/or -classes\n */\nfunction cleanPseudos(selectors) {\n    selectors.forEach(function(selector) {\n        selector.pseudos.forEach(function(pseudo) {\n            pseudo.list.remove(pseudo.item);\n        });\n    });\n}\n\n\n/**\n * Compares two selector specificities.\n * extracted from https://github.com/keeganstreet/specificity/blob/master/specificity.js#L211\n *\n * @param {Array} aSpecificity Specificity of selector A\n * @param {Array} bSpecificity Specificity of selector B\n * @return {Number} Score of selector specificity A compared to selector specificity B\n */\nfunction compareSpecificity(aSpecificity, bSpecificity) {\n    for (var i = 0; i < 4; i += 1) {\n        if (aSpecificity[i] < bSpecificity[i]) {\n            return -1;\n        } else if (aSpecificity[i] > bSpecificity[i]) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\n\n/**\n * Compare two simple selectors.\n *\n * @param {Object} aSimpleSelectorNode Simple selector A\n * @param {Object} bSimpleSelectorNode Simple selector B\n * @return {Number} Score of selector A compared to selector B\n */\nfunction compareSimpleSelectorNode(aSimpleSelectorNode, bSimpleSelectorNode) {\n    var aSpecificity = specificity(aSimpleSelectorNode),\n        bSpecificity = specificity(bSimpleSelectorNode);\n    return compareSpecificity(aSpecificity, bSpecificity);\n}\n\nfunction _bySelectorSpecificity(selectorA, selectorB) {\n    return compareSimpleSelectorNode(selectorA.item.data, selectorB.item.data);\n}\n\n\n/**\n * Sort selectors stably by their specificity.\n *\n * @param {Array} selectors to be sorted\n * @return {Array} Stable sorted selectors\n */\nfunction sortSelectors(selectors) {\n    return stable(selectors, _bySelectorSpecificity);\n}\n\n\n/**\n * Convert a css-tree AST style declaration to CSSStyleDeclaration property.\n *\n * @param {Object} declaration css-tree style declaration\n * @return {Object} CSSStyleDeclaration property\n */\nfunction csstreeToStyleDeclaration(declaration) {\n    var propertyName = declaration.property,\n        propertyValue = csstree.generate(declaration.value),\n        propertyPriority = (declaration.important ? 'important' : '');\n    return {\n        name: propertyName,\n        value: propertyValue,\n        priority: propertyPriority\n    };\n}\n\n\n/**\n * Gets the CSS string of a style element\n *\n * @param {Object} element style element\n * @return {String|Array} CSS string or empty array if no styles are set\n */\nfunction getCssStr(elem) {\n    return elem.content[0].text || elem.content[0].cdata || [];\n}\n\n/**\n * Sets the CSS string of a style element\n *\n * @param {Object} element style element\n * @param {String} CSS string to be set\n * @return {Object} reference to field with CSS\n */\nfunction setCssStr(elem, css) {\n    // in case of cdata field\n    if(elem.content[0].cdata) {\n        elem.content[0].cdata = css;\n        return elem.content[0].cdata;\n    }\n\n    // in case of text field + if nothing was set yet\n    elem.content[0].text  = css;\n    return elem.content[0].text;\n}\n\n\nmodule.exports.flattenToSelectors = flattenToSelectors;\n\nmodule.exports.filterByMqs = filterByMqs;\nmodule.exports.filterByPseudos = filterByPseudos;\nmodule.exports.cleanPseudos = cleanPseudos;\n\nmodule.exports.compareSpecificity = compareSpecificity;\nmodule.exports.compareSimpleSelectorNode = compareSimpleSelectorNode;\n\nmodule.exports.sortSelectors = sortSelectors;\n\nmodule.exports.csstreeToStyleDeclaration = csstreeToStyleDeclaration;\n\nmodule.exports.getCssStr = getCssStr;\nmodule.exports.setCssStr = setCssStr;\n","\n\n/**\n * Plugins engine.\n *\n * @module plugins\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Object} plugins plugins object from config\n * @return {Object} output data\n */\nmodule.exports = function(data, info, plugins) {\n\n    plugins.forEach(function(group) {\n\n        switch(group[0].type) {\n            case 'perItem':\n                data = perItem(data, info, group);\n                break;\n            case 'perItemReverse':\n                data = perItem(data, info, group, true);\n                break;\n            case 'full':\n                data = full(data, info, group);\n                break;\n        }\n\n    });\n\n    return data;\n\n};\n\n/**\n * Direct or reverse per-item loop.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @param {Boolean} [reverse] reverse pass?\n * @return {Object} output data\n */\nfunction perItem(data, info, plugins, reverse) {\n\n    function monkeys(items) {\n\n        items.content = items.content.filter(function(item) {\n\n            // reverse pass\n            if (reverse && item.content) {\n                monkeys(item);\n            }\n\n            // main filter\n            var filter = true;\n\n            for (var i = 0; filter && i < plugins.length; i++) {\n                var plugin = plugins[i];\n\n                if (plugin.active && plugin.fn(item, plugin.params, info) === false) {\n                    filter = false;\n                }\n            }\n\n            // direct pass\n            if (!reverse && item.content) {\n                monkeys(item);\n            }\n\n            return filter;\n\n        });\n\n        return items;\n\n    }\n\n    return monkeys(data);\n\n}\n\n/**\n * \"Full\" plugins.\n *\n * @param {Object} data input data\n * @param {Object} info extra information\n * @param {Array} plugins plugins list to process\n * @return {Object} output data\n */\nfunction full(data, info, plugins) {\n\n    plugins.forEach(function(plugin) {\n        if (plugin.active) {\n            data = plugin.fn(data, plugin.params, info);\n        }\n    });\n\n    return data;\n\n}\n","\n\nvar FS = require('fs');\n\n/**\n * Encode plain SVG data string into Data URI string.\n *\n * @param {String} str input string\n * @param {String} type Data URI type\n * @return {String} output string\n */\nexports.encodeSVGDatauri = function(str, type) {\n    var prefix = 'data:image/svg+xml';\n    if (!type || type === 'base64') {\n        // base64\n        prefix += ';base64,';\n        if (Buffer.from) {\n            str = prefix + Buffer.from(str).toString('base64');\n        } else {\n            str = prefix + new Buffer(str).toString('base64');\n        }\n    } else if (type === 'enc') {\n        // URI encoded\n        str = prefix + ',' + encodeURIComponent(str);\n    } else if (type === 'unenc') {\n        // unencoded\n        str = prefix + ',' + str;\n    }\n    return str;\n};\n\n/**\n * Decode SVG Data URI string into plain SVG string.\n *\n * @param {string} str input string\n * @return {String} output string\n */\nexports.decodeSVGDatauri = function(str) {\n    var regexp = /data:image\\/svg\\+xml(;charset=[^;,]*)?(;base64)?,(.*)/;\n    var match = regexp.exec(str);\n\n    // plain string\n    if (!match) return str;\n\n    var data = match[3];\n\n    if (match[2]) {\n        // base64\n        str = new Buffer(data, 'base64').toString('utf8');\n    } else if (data.charAt(0) === '%') {\n        // URI encoded\n        str = decodeURIComponent(data);\n    } else if (data.charAt(0) === '<') {\n        // unencoded\n        str = data;\n    }\n    return str;\n};\n\nexports.intersectArrays = function(a, b) {\n    return a.filter(function(n) {\n        return b.indexOf(n) > -1;\n    });\n};\n\n/**\n * Convert a row of numbers to an optimized string view.\n *\n * @example\n * [0, -1, .5, .5] → \"0-1 .5.5\"\n *\n * @param {number[]} data\n * @param {Object} params\n * @param {string?} command path data instruction\n * @return {string}\n */\nexports.cleanupOutData = function(data, params, command) {\n    var str = '',\n        delimiter,\n        prev;\n\n    data.forEach(function(item, i) {\n        // space delimiter by default\n        delimiter = ' ';\n\n        // no extra space in front of first number\n        if (i == 0) delimiter = '';\n\n        // no extra space after 'arcto' command flags\n        if (params.noSpaceAfterFlags && (command == 'A' || command == 'a')) {\n            var pos = i % 7;\n            if (pos == 4 || pos == 5) delimiter = '';\n        }\n\n        // remove floating-point numbers leading zeros\n        // 0.5 → .5\n        // -0.5 → -.5\n        if (params.leadingZero) {\n            item = removeLeadingZero(item);\n        }\n\n        // no extra space in front of negative number or\n        // in front of a floating number if a previous number is floating too\n        if (\n            params.negativeExtraSpace &&\n            delimiter != '' &&\n            (item < 0 ||\n                (String(item).charCodeAt(0) == 46 && prev % 1 !== 0)\n            )\n        ) {\n            delimiter = '';\n        }\n        // save prev item value\n        prev = item;\n        str += delimiter + item;\n    });\n    return str;\n};\n\n/**\n * Remove floating-point numbers leading zero.\n *\n * @example\n * 0.5 → .5\n *\n * @example\n * -0.5 → -.5\n *\n * @param {Float} num input number\n *\n * @return {String} output number as string\n */\nvar removeLeadingZero = exports.removeLeadingZero = function(num) {\n    var strNum = num.toString();\n\n    if (0 < num && num < 1 && strNum.charCodeAt(0) == 48) {\n        strNum = strNum.slice(1);\n    } else if (-1 < num && num < 0 && strNum.charCodeAt(1) == 48) {\n        strNum = strNum.charAt(0) + strNum.slice(2);\n    }\n    return strNum;\n};\n\n\n/**\n * Synchronously check if path is a directory. Tolerant to errors like ENOENT.\n * @param {string} path\n */\nexports.checkIsDir = function(path) {\n    try {\n        return FS.lstatSync(path).isDirectory();\n    } catch(e) {\n        return false;\n    }\n};\n","\n\nvar EOL = require('os').EOL,\n    textElem = require('../../plugins/_collections.js').elemsGroups.textContent.concat('title');\n\nvar defaults = {\n    doctypeStart: '<!DOCTYPE',\n    doctypeEnd: '>',\n    procInstStart: '<?',\n    procInstEnd: '?>',\n    tagOpenStart: '<',\n    tagOpenEnd: '>',\n    tagCloseStart: '</',\n    tagCloseEnd: '>',\n    tagShortStart: '<',\n    tagShortEnd: '/>',\n    attrStart: '=\"',\n    attrEnd: '\"',\n    commentStart: '<!--',\n    commentEnd: '-->',\n    cdataStart: '<![CDATA[',\n    cdataEnd: ']]>',\n    textStart: '',\n    textEnd: '',\n    indent: 4,\n    regEntities: /[&'\"<>]/g,\n    regValEntities: /[&\"<>]/g,\n    encodeEntity: encodeEntity,\n    pretty: false,\n    useShortTags: true\n};\n\nvar entities = {\n      '&': '&amp;',\n      '\\'': '&apos;',\n      '\"': '&quot;',\n      '>': '&gt;',\n      '<': '&lt;',\n    };\n\n/**\n * Convert SVG-as-JS object to SVG (XML) string.\n *\n * @param {Object} data input data\n * @param {Object} config config\n *\n * @return {Object} output data\n */\nmodule.exports = function(data, config) {\n\n    return new JS2SVG(config).convert(data);\n\n};\n\nfunction JS2SVG(config) {\n\n    if (config) {\n        this.config = Object.assign({}, defaults, config);\n    } else {\n        this.config = Object.assign({}, defaults);\n    }\n\n    var indent = this.config.indent;\n    if (typeof indent == 'number' && !isNaN(indent)) {\n        this.config.indent = (indent < 0) ? '\\t' : ' '.repeat(indent);\n    } else if (typeof indent != 'string') {\n        this.config.indent = '    ';\n    }\n\n    if (this.config.pretty) {\n        this.config.doctypeEnd += EOL;\n        this.config.procInstEnd += EOL;\n        this.config.commentEnd += EOL;\n        this.config.cdataEnd += EOL;\n        this.config.tagShortEnd += EOL;\n        this.config.tagOpenEnd += EOL;\n        this.config.tagCloseEnd += EOL;\n        this.config.textEnd += EOL;\n    }\n\n    this.indentLevel = 0;\n    this.textContext = null;\n\n}\n\nfunction encodeEntity(char) {\n    return entities[char];\n}\n\n/**\n * Start conversion.\n *\n * @param {Object} data input data\n *\n * @return {String}\n */\nJS2SVG.prototype.convert = function(data) {\n\n    var svg = '';\n\n    if (data.content) {\n\n        this.indentLevel++;\n\n        data.content.forEach(function(item) {\n\n            if (item.elem) {\n               svg += this.createElem(item);\n            } else if (item.text) {\n               svg += this.createText(item.text);\n            } else if (item.doctype) {\n                svg += this.createDoctype(item.doctype);\n            } else if (item.processinginstruction) {\n                svg += this.createProcInst(item.processinginstruction);\n            } else if (item.comment) {\n                svg += this.createComment(item.comment);\n            } else if (item.cdata) {\n                svg += this.createCDATA(item.cdata);\n            }\n\n        }, this);\n\n    }\n\n    this.indentLevel--;\n\n    return {\n        data: svg,\n        info: {\n            width: this.width,\n            height: this.height\n        }\n    };\n\n};\n\n/**\n * Create indent string in accordance with the current node level.\n *\n * @return {String}\n */\nJS2SVG.prototype.createIndent = function() {\n\n    var indent = '';\n\n    if (this.config.pretty && !this.textContext) {\n        indent = this.config.indent.repeat(this.indentLevel - 1);\n    }\n\n    return indent;\n\n};\n\n/**\n * Create doctype tag.\n *\n * @param {String} doctype doctype body string\n *\n * @return {String}\n */\nJS2SVG.prototype.createDoctype = function(doctype) {\n\n    return  this.config.doctypeStart +\n            doctype +\n            this.config.doctypeEnd;\n\n};\n\n/**\n * Create XML Processing Instruction tag.\n *\n * @param {Object} instruction instruction object\n *\n * @return {String}\n */\nJS2SVG.prototype.createProcInst = function(instruction) {\n\n    return  this.config.procInstStart +\n            instruction.name +\n            ' ' +\n            instruction.body +\n            this.config.procInstEnd;\n\n};\n\n/**\n * Create comment tag.\n *\n * @param {String} comment comment body\n *\n * @return {String}\n */\nJS2SVG.prototype.createComment = function(comment) {\n\n    return  this.config.commentStart +\n            comment +\n            this.config.commentEnd;\n\n};\n\n/**\n * Create CDATA section.\n *\n * @param {String} cdata CDATA body\n *\n * @return {String}\n */\nJS2SVG.prototype.createCDATA = function(cdata) {\n\n    return  this.createIndent() +\n            this.config.cdataStart +\n            cdata +\n            this.config.cdataEnd;\n\n};\n\n/**\n * Create element tag.\n *\n * @param {Object} data element object\n *\n * @return {String}\n */\nJS2SVG.prototype.createElem = function(data) {\n\n    // beautiful injection for obtaining SVG information :)\n    if (\n        data.isElem('svg') &&\n        data.hasAttr('width') &&\n        data.hasAttr('height')\n    ) {\n        this.width = data.attr('width').value;\n        this.height = data.attr('height').value;\n    }\n\n    // empty element and short tag\n    if (data.isEmpty()) {\n        if (this.config.useShortTags) {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagShortEnd;\n        } else {\n            return this.createIndent() +\n                   this.config.tagShortStart +\n                   data.elem +\n                   this.createAttrs(data) +\n                   this.config.tagOpenEnd +\n                   this.config.tagCloseStart +\n                   data.elem +\n                   this.config.tagCloseEnd;\n        }\n    // non-empty element\n    } else {\n        var tagOpenStart = this.config.tagOpenStart,\n            tagOpenEnd = this.config.tagOpenEnd,\n            tagCloseStart = this.config.tagCloseStart,\n            tagCloseEnd = this.config.tagCloseEnd,\n            openIndent = this.createIndent(),\n            textIndent = '',\n            processedData = '',\n            dataEnd = '';\n\n        if (this.textContext) {\n            tagOpenStart = defaults.tagOpenStart;\n            tagOpenEnd = defaults.tagOpenEnd;\n            tagCloseStart = defaults.tagCloseStart;\n            tagCloseEnd = defaults.tagCloseEnd;\n            openIndent = '';\n        } else if (data.isElem(textElem)) {\n            if (this.config.pretty) {\n                textIndent += openIndent + this.config.indent;\n            }\n            this.textContext = data;\n        }\n\n        processedData += this.convert(data).data;\n\n        if (this.textContext == data) {\n            this.textContext = null;\n            if (this.config.pretty) dataEnd = EOL;\n        }\n\n        return  openIndent +\n                tagOpenStart +\n                data.elem +\n                this.createAttrs(data) +\n                tagOpenEnd +\n                textIndent +\n                processedData +\n                dataEnd +\n                this.createIndent() +\n                tagCloseStart +\n                data.elem +\n                tagCloseEnd;\n\n    }\n\n};\n\n/**\n * Create element attributes.\n *\n * @param {Object} elem attributes object\n *\n * @return {String}\n */\nJS2SVG.prototype.createAttrs = function(elem) {\n\n    var attrs = '';\n\n    elem.eachAttr(function(attr) {\n\n        if (attr.value !== undefined) {\n            attrs +=    ' ' +\n                        attr.name +\n                        this.config.attrStart +\n                        String(attr.value).replace(this.config.regValEntities, this.config.encodeEntity) +\n                        this.config.attrEnd;\n        }\n        else {\n            attrs +=    ' ' +\n                        attr.name;\n        }\n\n\n    }, this);\n\n    return attrs;\n\n};\n\n/**\n * Create text node.\n *\n * @param {String} text text\n *\n * @return {String}\n */\nJS2SVG.prototype.createText = function(text) {\n\n    return  this.createIndent() +\n            this.config.textStart +\n            text.replace(this.config.regEntities, this.config.encodeEntity) +\n            (this.textContext ? '' : this.config.textEnd);\n\n};\n","\n\n// http://www.w3.org/TR/SVG11/intro.html#Definitions\nexports.elemsGroups = {\n    animation: ['animate', 'animateColor', 'animateMotion', 'animateTransform', 'set'],\n    descriptive: ['desc', 'metadata', 'title'],\n    shape: ['circle', 'ellipse', 'line', 'path', 'polygon', 'polyline', 'rect'],\n    structural: ['defs', 'g', 'svg', 'symbol', 'use'],\n    paintServer: ['solidColor', 'linearGradient', 'radialGradient', 'meshGradient', 'pattern', 'hatch'],\n    nonRendering: ['linearGradient', 'radialGradient', 'pattern', 'clipPath', 'mask', 'marker', 'symbol', 'filter', 'solidColor'],\n    container: ['a', 'defs', 'g', 'marker', 'mask', 'missing-glyph', 'pattern', 'svg', 'switch', 'symbol', 'foreignObject'],\n    textContent: ['altGlyph', 'altGlyphDef', 'altGlyphItem', 'glyph', 'glyphRef', 'textPath', 'text', 'tref', 'tspan'],\n    textContentChild: ['altGlyph', 'textPath', 'tref', 'tspan'],\n    lightSource: ['feDiffuseLighting', 'feSpecularLighting', 'feDistantLight', 'fePointLight', 'feSpotLight'],\n    filterPrimitive: ['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feFlood', 'feGaussianBlur', 'feImage', 'feMerge', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence']\n};\n\nexports.pathElems = ['path', 'glyph', 'missing-glyph'];\n\n// http://www.w3.org/TR/SVG11/intro.html#Definitions\nexports.attrsGroups = {\n    animationAddition: ['additive', 'accumulate'],\n    animationAttributeTarget: ['attributeType', 'attributeName'],\n    animationEvent: ['onbegin', 'onend', 'onrepeat', 'onload'],\n    animationTiming: ['begin', 'dur', 'end', 'min', 'max', 'restart', 'repeatCount', 'repeatDur', 'fill'],\n    animationValue: ['calcMode', 'values', 'keyTimes', 'keySplines', 'from', 'to', 'by'],\n    conditionalProcessing: ['requiredFeatures', 'requiredExtensions', 'systemLanguage'],\n    core: ['id', 'tabindex', 'xml:base', 'xml:lang', 'xml:space'],\n    graphicalEvent: ['onfocusin', 'onfocusout', 'onactivate', 'onclick', 'onmousedown', 'onmouseup', 'onmouseover', 'onmousemove', 'onmouseout', 'onload'],\n    presentation: [\n        'alignment-baseline',\n        'baseline-shift',\n        'clip',\n        'clip-path',\n        'clip-rule',\n        'color',\n        'color-interpolation',\n        'color-interpolation-filters',\n        'color-profile',\n        'color-rendering',\n        'cursor',\n        'direction',\n        'display',\n        'dominant-baseline',\n        'enable-background',\n        'fill',\n        'fill-opacity',\n        'fill-rule',\n        'filter',\n        'flood-color',\n        'flood-opacity',\n        'font-family',\n        'font-size',\n        'font-size-adjust',\n        'font-stretch',\n        'font-style',\n        'font-variant',\n        'font-weight',\n        'glyph-orientation-horizontal',\n        'glyph-orientation-vertical',\n        'image-rendering',\n        'letter-spacing',\n        'lighting-color',\n        'marker-end',\n        'marker-mid',\n        'marker-start',\n        'mask',\n        'opacity',\n        'overflow',\n        'paint-order',\n        'pointer-events',\n        'shape-rendering',\n        'stop-color',\n        'stop-opacity',\n        'stroke',\n        'stroke-dasharray',\n        'stroke-dashoffset',\n        'stroke-linecap',\n        'stroke-linejoin',\n        'stroke-miterlimit',\n        'stroke-opacity',\n        'stroke-width',\n        'text-anchor',\n        'text-decoration',\n        'text-overflow',\n        'text-rendering',\n        'transform',\n        'unicode-bidi',\n        'vector-effect',\n        'visibility',\n        'word-spacing',\n        'writing-mode'\n    ],\n    xlink: ['xlink:href', 'xlink:show', 'xlink:actuate', 'xlink:type', 'xlink:role', 'xlink:arcrole', 'xlink:title'],\n    documentEvent: ['onunload', 'onabort', 'onerror', 'onresize', 'onscroll', 'onzoom'],\n    filterPrimitive: ['x', 'y', 'width', 'height', 'result'],\n    transferFunction: ['type', 'tableValues', 'slope', 'intercept', 'amplitude', 'exponent', 'offset']\n};\n\nexports.attrsGroupsDefaults = {\n    core: {'xml:space': 'preserve'},\n    filterPrimitive: {x: '0', y: '0', width: '100%', height: '100%'},\n    presentation: {\n        clip: 'auto',\n        'clip-path': 'none',\n        'clip-rule': 'nonzero',\n        mask: 'none',\n        opacity: '1',\n        'stop-color': '#000',\n        'stop-opacity': '1',\n        'fill-opacity': '1',\n        'fill-rule': 'nonzero',\n        fill: '#000',\n        stroke: 'none',\n        'stroke-width': '1',\n        'stroke-linecap': 'butt',\n        'stroke-linejoin': 'miter',\n        'stroke-miterlimit': '4',\n        'stroke-dasharray': 'none',\n        'stroke-dashoffset': '0',\n        'stroke-opacity': '1',\n        'paint-order': 'normal',\n        'vector-effect': 'none',\n        display: 'inline',\n        visibility: 'visible',\n        'marker-start': 'none',\n        'marker-mid': 'none',\n        'marker-end': 'none',\n        'color-interpolation': 'sRGB',\n        'color-interpolation-filters': 'linearRGB',\n        'color-rendering': 'auto',\n        'shape-rendering': 'auto',\n        'text-rendering': 'auto',\n        'image-rendering': 'auto',\n        'font-style': 'normal',\n        'font-variant': 'normal',\n        'font-weight': 'normal',\n        'font-stretch': 'normal',\n        'font-size': 'medium',\n        'font-size-adjust': 'none',\n        kerning: 'auto',\n        'letter-spacing': 'normal',\n        'word-spacing': 'normal',\n        'text-decoration': 'none',\n        'text-anchor': 'start',\n        'text-overflow': 'clip',\n        'writing-mode': 'lr-tb',\n        'glyph-orientation-vertical': 'auto',\n        'glyph-orientation-horizontal': '0deg',\n        direction: 'ltr',\n        'unicode-bidi': 'normal',\n        'dominant-baseline': 'auto',\n        'alignment-baseline': 'baseline',\n        'baseline-shift': 'baseline'\n    },\n    transferFunction: {slope: '1', intercept: '0', amplitude: '1', exponent: '1', offset: '0'}\n};\n\n// http://www.w3.org/TR/SVG11/eltindex.html\nexports.elems = {\n    a: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'target'\n        ],\n        defaults: {\n            target: '_self'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    altGlyph: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'x',\n            'y',\n            'dx',\n            'dy',\n            'glyphRef',\n            'format',\n            'rotate'\n        ]\n    },\n    altGlyphDef: {\n        attrsGroups: [\n            'core'\n        ],\n        content: [\n            'glyphRef'\n        ]\n    },\n    altGlyphItem: {\n        attrsGroups: [\n            'core'\n        ],\n        content: [\n            'glyphRef',\n            'altGlyphItem'\n        ]\n    },\n    animate: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'animationAddition',\n            'animationAttributeTarget',\n            'animationEvent',\n            'animationTiming',\n            'animationValue',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'externalResourcesRequired'\n        ],\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    animateColor: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'animationEvent',\n            'xlink',\n            'animationAttributeTarget',\n            'animationTiming',\n            'animationValue',\n            'animationAddition',\n            'presentation'\n        ],\n        attrs: [\n            'externalResourcesRequired'\n        ],\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    animateMotion: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'animationEvent',\n            'xlink',\n            'animationTiming',\n            'animationValue',\n            'animationAddition'\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'path',\n            'keyPoints',\n            'rotate',\n            'origin'\n        ],\n        defaults: {\n            'rotate': '0'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'mpath'\n        ]\n    },\n    animateTransform: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'animationEvent',\n            'xlink',\n            'animationAttributeTarget',\n            'animationTiming',\n            'animationValue',\n            'animationAddition'\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'type'\n        ],\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    circle: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'cx',\n            'cy',\n            'r'\n        ],\n        defaults: {\n            cx: '0',\n            cy: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    clipPath: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'clipPathUnits'\n        ],\n        defaults: {\n            clipPathUnits: 'userSpaceOnUse'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape'\n        ],\n        content: [\n            'text',\n            'use'\n        ]\n    },\n    'color-profile': {\n        attrsGroups: [\n            'core',\n            'xlink'\n        ],\n        attrs: [\n            'local',\n            'name',\n            'rendering-intent'\n        ],\n        defaults: {\n            name: 'sRGB',\n            'rendering-intent': 'auto'\n        },\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    cursor: {\n        attrsGroups: [\n            'core',\n            'conditionalProcessing',\n            'xlink'\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'x',\n            'y'\n        ],\n        defaults: {\n            x: '0',\n            y: '0'\n        },\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    defs: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    desc: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ]\n    },\n    ellipse: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'cx',\n            'cy',\n            'rx',\n            'ry'\n        ],\n        defaults: {\n            cx: '0',\n            cy: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    feBlend: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            // TODO: in - 'If no value is provided and this is the first filter primitive,\n            // then this filter primitive will use SourceGraphic as its input'\n            'in',\n            'in2',\n            'mode'\n        ],\n        defaults: {\n            mode: 'normal'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feColorMatrix: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'type',\n            'values'\n        ],\n        defaults: {\n            type: 'matrix'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feComponentTransfer: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in'\n        ],\n        content: [\n            'feFuncA',\n            'feFuncB',\n            'feFuncG',\n            'feFuncR'\n        ]\n    },\n    feComposite: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'in2',\n            'operator',\n            'k1',\n            'k2',\n            'k3',\n            'k4'\n        ],\n        defaults: {\n            operator: 'over',\n            k1: '0',\n            k2: '0',\n            k3: '0',\n            k4: '0'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feConvolveMatrix: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'order',\n            'kernelMatrix',\n            // TODO: divisor - 'The default value is the sum of all values in kernelMatrix,\n            // with the exception that if the sum is zero, then the divisor is set to 1'\n            'divisor',\n            'bias',\n            // TODO: targetX - 'By default, the convolution matrix is centered in X over each\n            // pixel of the input image (i.e., targetX = floor ( orderX / 2 ))'\n            'targetX',\n            'targetY',\n            'edgeMode',\n            // TODO: kernelUnitLength - 'The first number is the <dx> value. The second number\n            // is the <dy> value. If the <dy> value is not specified, it defaults to the same value as <dx>'\n            'kernelUnitLength',\n            'preserveAlpha'\n        ],\n        defaults: {\n            order: '3',\n            bias: '0',\n            edgeMode: 'duplicate',\n            preserveAlpha: 'false'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feDiffuseLighting: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'surfaceScale',\n            'diffuseConstant',\n            'kernelUnitLength'\n        ],\n        defaults: {\n            surfaceScale: '1',\n            diffuseConstant: '1'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            // TODO: 'exactly one light source element, in any order'\n            'feDistantLight',\n            'fePointLight',\n            'feSpotLight'\n        ]\n    },\n    feDisplacementMap: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'in2',\n            'scale',\n            'xChannelSelector',\n            'yChannelSelector'\n        ],\n        defaults: {\n            scale: '0',\n            xChannelSelector: 'A',\n            yChannelSelector: 'A'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feDistantLight: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'azimuth',\n            'elevation'\n        ],\n        defaults: {\n            azimuth: '0',\n            elevation: '0'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feFlood: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ],\n        content: [\n            'animate',\n            'animateColor',\n            'set'\n        ]\n    },\n    feFuncA: {\n        attrsGroups: [\n            'core',\n            'transferFunction'\n        ],\n        content: [\n            'set',\n            'animate'\n        ]\n    },\n    feFuncB: {\n        attrsGroups: [\n            'core',\n            'transferFunction'\n        ],\n        content: [\n            'set',\n            'animate'\n        ]\n    },\n    feFuncG: {\n        attrsGroups: [\n            'core',\n            'transferFunction'\n        ],\n        content: [\n            'set',\n            'animate'\n        ]\n    },\n    feFuncR: {\n        attrsGroups: [\n            'core',\n            'transferFunction'\n        ],\n        content: [\n            'set',\n            'animate'\n        ]\n    },\n    feGaussianBlur: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'stdDeviation'\n        ],\n        defaults: {\n            stdDeviation: '0'\n        },\n        content: [\n            'set',\n            'animate'\n        ]\n    },\n    feImage: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'preserveAspectRatio',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            preserveAspectRatio: 'xMidYMid meet'\n        },\n        content: [\n            'animate',\n            'animateTransform',\n            'set'\n        ]\n    },\n    feMerge: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ],\n        content: [\n            'feMergeNode'\n        ]\n    },\n    feMergeNode: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'in'\n        ],\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feMorphology: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'operator',\n            'radius'\n        ],\n        defaults: {\n            operator: 'erode',\n            radius: '0'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feOffset: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'dx',\n            'dy'\n        ],\n        defaults: {\n            dx: '0',\n            dy: '0'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    fePointLight: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'x',\n            'y',\n            'z'\n        ],\n        defaults: {\n            x: '0',\n            y: '0',\n            z: '0'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feSpecularLighting: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in',\n            'surfaceScale',\n            'specularConstant',\n            'specularExponent',\n            'kernelUnitLength'\n        ],\n        defaults: {\n            surfaceScale: '1',\n            specularConstant: '1',\n            specularExponent: '1'\n        },\n        contentGroups: [\n            'descriptive',\n            // TODO: exactly one 'light source element'\n            'lightSource'\n        ]\n    },\n    feSpotLight: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'x',\n            'y',\n            'z',\n            'pointsAtX',\n            'pointsAtY',\n            'pointsAtZ',\n            'specularExponent',\n            'limitingConeAngle'\n        ],\n        defaults: {\n            x: '0',\n            y: '0',\n            z: '0',\n            pointsAtX: '0',\n            pointsAtY: '0',\n            pointsAtZ: '0',\n            specularExponent: '1'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feTile: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'in'\n        ],\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    feTurbulence: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'filterPrimitive'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'baseFrequency',\n            'numOctaves',\n            'seed',\n            'stitchTiles',\n            'type'\n        ],\n        defaults: {\n            baseFrequency: '0',\n            numOctaves: '1',\n            seed: '0',\n            stitchTiles: 'noStitch',\n            type: 'turbulence'\n        },\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    filter: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'x',\n            'y',\n            'width',\n            'height',\n            'filterRes',\n            'filterUnits',\n            'primitiveUnits',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            primitiveUnits: 'userSpaceOnUse',\n            x: '-10%',\n            y: '-10%',\n            width: '120%',\n            height: '120%'\n        },\n        contentGroups: [\n            'descriptive',\n            'filterPrimitive'\n        ],\n        content: [\n            'animate',\n            'set'\n        ]\n    },\n    font: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'horiz-origin-x',\n            'horiz-origin-y',\n            'horiz-adv-x',\n            'vert-origin-x',\n            'vert-origin-y',\n            'vert-adv-y'\n        ],\n        defaults: {\n            'horiz-origin-x': '0',\n            'horiz-origin-y': '0'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'font-face',\n            'glyph',\n            'hkern',\n            'missing-glyph',\n            'vkern'\n        ]\n    },\n    'font-face': {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'font-family',\n            'font-style',\n            'font-variant',\n            'font-weight',\n            'font-stretch',\n            'font-size',\n            'unicode-range',\n            'units-per-em',\n            'panose-1',\n            'stemv',\n            'stemh',\n            'slope',\n            'cap-height',\n            'x-height',\n            'accent-height',\n            'ascent',\n            'descent',\n            'widths',\n            'bbox',\n            'ideographic',\n            'alphabetic',\n            'mathematical',\n            'hanging',\n            'v-ideographic',\n            'v-alphabetic',\n            'v-mathematical',\n            'v-hanging',\n            'underline-position',\n            'underline-thickness',\n            'strikethrough-position',\n            'strikethrough-thickness',\n            'overline-position',\n            'overline-thickness'\n        ],\n        defaults: {\n            'font-style': 'all',\n            'font-variant': 'normal',\n            'font-weight': 'all',\n            'font-stretch': 'normal',\n            'unicode-range': 'U+0-10FFFF',\n            'units-per-em': '1000',\n            'panose-1': '0 0 0 0 0 0 0 0 0 0',\n            'slope': '0'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            // TODO: \"at most one 'font-face-src' element\"\n            'font-face-src'\n        ]\n    },\n    // TODO: empty content\n    'font-face-format': {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'string'\n        ]\n    },\n    'font-face-name': {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'name'\n        ]\n    },\n    'font-face-src': {\n        attrsGroups: [\n            'core'\n        ],\n        content: [\n            'font-face-name',\n            'font-face-uri'\n        ]\n    },\n    'font-face-uri': {\n        attrsGroups: [\n            'core',\n            'xlink'\n        ],\n        attrs: [\n            'href',\n            'xlink:href'\n        ],\n        content: [\n            'font-face-format'\n        ]\n    },\n    foreignObject: {\n        attrsGroups: [\n            'core',\n            'conditionalProcessing',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'x',\n            'y',\n            'width',\n            'height'\n        ],\n        defaults: {\n            x: 0,\n            y: 0\n        }\n    },\n    g: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    glyph: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'd',\n            'horiz-adv-x',\n            'vert-origin-x',\n            'vert-origin-y',\n            'vert-adv-y',\n            'unicode',\n            'glyph-name',\n            'orientation',\n            'arabic-form',\n            'lang'\n        ],\n        defaults: {\n            'arabic-form': 'initial'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ],\n    },\n    glyphRef: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'd',\n            'horiz-adv-x',\n            'vert-origin-x',\n            'vert-origin-y',\n            'vert-adv-y'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    hatch: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'x',\n            'y',\n            'pitch',\n            'rotate',\n            'hatchUnits',\n            'hatchContentUnits',\n            'transform'\n        ],\n        defaults: {\n            hatchUnits: 'objectBoundingBox',\n            hatchContentUnits: 'userSpaceOnUse',\n            x: '0',\n            y: '0',\n            pitch: '0',\n            rotate: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ],\n        content: [\n            'hatchPath'\n        ]\n    },\n    hatchPath: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'd',\n            'offset'\n        ],\n        defaults: {\n            offset: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    hkern: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'u1',\n            'g1',\n            'u2',\n            'g2',\n            'k'\n        ]\n    },\n    image: {\n        attrsGroups: [\n            'core',\n            'conditionalProcessing',\n            'graphicalEvent',\n            'xlink',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'preserveAspectRatio',\n            'transform',\n            'x',\n            'y',\n            'width',\n            'height',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            x: '0',\n            y: '0',\n            preserveAspectRatio: 'xMidYMid meet'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    line: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'x1',\n            'y1',\n            'x2',\n            'y2'\n        ],\n        defaults: {\n            x1: '0',\n            y1: '0',\n            x2: '0',\n            y2: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    linearGradient: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'x1',\n            'y1',\n            'x2',\n            'y2',\n            'gradientUnits',\n            'gradientTransform',\n            'spreadMethod',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            x1: '0',\n            y1: '0',\n            x2: '100%',\n            y2: '0',\n            spreadMethod: 'pad'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'animate',\n            'animateTransform',\n            'set',\n            'stop'\n        ]\n    },\n    marker: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'viewBox',\n            'preserveAspectRatio',\n            'refX',\n            'refY',\n            'markerUnits',\n            'markerWidth',\n            'markerHeight',\n            'orient'\n        ],\n        defaults: {\n            markerUnits: 'strokeWidth',\n            refX: '0',\n            refY: '0',\n            markerWidth: '3',\n            markerHeight: '3'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    mask: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'x',\n            'y',\n            'width',\n            'height',\n            'maskUnits',\n            'maskContentUnits'\n        ],\n        defaults: {\n            maskUnits: 'objectBoundingBox',\n            maskContentUnits: 'userSpaceOnUse',\n            x: '-10%',\n            y: '-10%',\n            width: '120%',\n            height: '120%'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    metadata: {\n        attrsGroups: [\n            'core'\n        ]\n    },\n    'missing-glyph': {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'd',\n            'horiz-adv-x',\n            'vert-origin-x',\n            'vert-origin-y',\n            'vert-adv-y'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    mpath: {\n        attrsGroups: [\n            'core',\n            'xlink'\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'href',\n            'xlink:href'\n        ],\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    path: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'd',\n            'pathLength'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    pattern: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'viewBox',\n            'preserveAspectRatio',\n            'x',\n            'y',\n            'width',\n            'height',\n            'patternUnits',\n            'patternContentUnits',\n            'patternTransform',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            patternUnits: 'objectBoundingBox',\n            patternContentUnits: 'userSpaceOnUse',\n            x: '0',\n            y: '0',\n            width: '0',\n            height: '0',\n            preserveAspectRatio: 'xMidYMid meet'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'paintServer',\n            'shape',\n            'structural'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    polygon: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'points'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    polyline: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'points'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    radialGradient: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'cx',\n            'cy',\n            'r',\n            'fx',\n            'fy',\n            'fr',\n            'gradientUnits',\n            'gradientTransform',\n            'spreadMethod',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            gradientUnits: 'objectBoundingBox',\n            cx: '50%',\n            cy: '50%',\n            r: '50%'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'animate',\n            'animateTransform',\n            'set',\n            'stop'\n        ]\n    },\n    meshGradient: {\n        attrsGroups: [\n            'core',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'x',\n            'y',\n            'gradientUnits',\n            'transform'\n        ],\n        contentGroups: [\n            'descriptive',\n            'paintServer',\n            'animation',\n        ],\n        content: [\n            'meshRow'\n        ]\n    },\n    meshRow: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ],\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'meshPatch'\n        ]\n    },\n    meshPatch: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ],\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'stop'\n        ]\n    },\n    rect: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'x',\n            'y',\n            'width',\n            'height',\n            'rx',\n            'ry'\n        ],\n        defaults: {\n            x: '0',\n            y: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    script: {\n        attrsGroups: [\n            'core',\n            'xlink'\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'type',\n            'href',\n            'xlink:href'\n        ]\n    },\n    set: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'animation',\n            'xlink',\n            'animationAttributeTarget',\n            'animationTiming',\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'to'\n        ],\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    solidColor: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ],\n        contentGroups: [\n            'paintServer'\n        ]\n    },\n    stop: {\n        attrsGroups: [\n            'core',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'offset',\n            'path'\n        ],\n        content: [\n            'animate',\n            'animateColor',\n            'set'\n        ]\n    },\n    style: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'type',\n            'media',\n            'title'\n        ],\n        defaults: {\n            type: 'text/css'\n        }\n    },\n    svg: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'documentEvent',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'x',\n            'y',\n            'width',\n            'height',\n            'viewBox',\n            'preserveAspectRatio',\n            'zoomAndPan',\n            'version',\n            'baseProfile',\n            'contentScriptType',\n            'contentStyleType'\n        ],\n        defaults: {\n            x: '0',\n            y: '0',\n            width: '100%',\n            height: '100%',\n            preserveAspectRatio: 'xMidYMid meet',\n            zoomAndPan: 'magnify',\n            version: '1.1',\n            baseProfile: 'none',\n            contentScriptType: 'application/ecmascript',\n            contentStyleType: 'text/css'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    switch: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform'\n        ],\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape'\n        ],\n        content: [\n            'a',\n            'foreignObject',\n            'g',\n            'image',\n            'svg',\n            'switch',\n            'text',\n            'use'\n        ]\n    },\n    symbol: {\n        attrsGroups: [\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'preserveAspectRatio',\n            'viewBox',\n            'refX',\n            'refY'\n        ],\n        defaults: {\n            refX: 0,\n            refY: 0\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'shape',\n            'structural',\n            'paintServer'\n        ],\n        content: [\n            'a',\n            'altGlyphDef',\n            'clipPath',\n            'color-profile',\n            'cursor',\n            'filter',\n            'font',\n            'font-face',\n            'foreignObject',\n            'image',\n            'marker',\n            'mask',\n            'pattern',\n            'script',\n            'style',\n            'switch',\n            'text',\n            'view'\n        ]\n    },\n    text: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'lengthAdjust',\n            'x',\n            'y',\n            'dx',\n            'dy',\n            'rotate',\n            'textLength'\n        ],\n        defaults: {\n            x: '0',\n            y: '0',\n            lengthAdjust: 'spacing'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive',\n            'textContentChild'\n        ],\n        content: [\n            'a'\n        ]\n    },\n    textPath: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'href',\n            'xlink:href',\n            'startOffset',\n            'method',\n            'spacing',\n            'd'\n        ],\n        defaults: {\n            startOffset: '0',\n            method: 'align',\n            spacing: 'exact'\n        },\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'a',\n            'altGlyph',\n            'animate',\n            'animateColor',\n            'set',\n            'tref',\n            'tspan'\n        ]\n    },\n    title: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'class',\n            'style'\n        ]\n    },\n    tref: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'href',\n            'xlink:href'\n        ],\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'animate',\n            'animateColor',\n            'set'\n        ]\n    },\n    tspan: {\n        attrsGroups: [\n            'conditionalProcessing',\n            'core',\n            'graphicalEvent',\n            'presentation'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'x',\n            'y',\n            'dx',\n            'dy',\n            'rotate',\n            'textLength',\n            'lengthAdjust'\n        ],\n        contentGroups: [\n            'descriptive'\n        ],\n        content: [\n            'a',\n            'altGlyph',\n            'animate',\n            'animateColor',\n            'set',\n            'tref',\n            'tspan'\n        ]\n    },\n    use: {\n        attrsGroups: [\n            'core',\n            'conditionalProcessing',\n            'graphicalEvent',\n            'presentation',\n            'xlink'\n        ],\n        attrs: [\n            'class',\n            'style',\n            'externalResourcesRequired',\n            'transform',\n            'x',\n            'y',\n            'width',\n            'height',\n            'href',\n            'xlink:href'\n        ],\n        defaults: {\n            x: '0',\n            y: '0'\n        },\n        contentGroups: [\n            'animation',\n            'descriptive'\n        ]\n    },\n    view: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'externalResourcesRequired',\n            'viewBox',\n            'preserveAspectRatio',\n            'zoomAndPan',\n            'viewTarget'\n        ],\n        contentGroups: [\n            'descriptive'\n        ]\n    },\n    vkern: {\n        attrsGroups: [\n            'core'\n        ],\n        attrs: [\n            'u1',\n            'g1',\n            'u2',\n            'g2',\n            'k'\n        ]\n    }\n};\n\n// http://wiki.inkscape.org/wiki/index.php/Inkscape-specific_XML_attributes\nexports.editorNamespaces = [\n    'http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd',\n    'http://inkscape.sourceforge.net/DTD/sodipodi-0.dtd',\n    'http://www.inkscape.org/namespaces/inkscape',\n    'http://www.bohemiancoding.com/sketch/ns',\n    'http://ns.adobe.com/AdobeIllustrator/10.0/',\n    'http://ns.adobe.com/Graphs/1.0/',\n    'http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/',\n    'http://ns.adobe.com/Variables/1.0/',\n    'http://ns.adobe.com/SaveForWeb/1.0/',\n    'http://ns.adobe.com/Extensibility/1.0/',\n    'http://ns.adobe.com/Flows/1.0/',\n    'http://ns.adobe.com/ImageReplacement/1.0/',\n    'http://ns.adobe.com/GenericCustomNamespace/1.0/',\n    'http://ns.adobe.com/XPath/1.0/',\n    'http://schemas.microsoft.com/visio/2003/SVGExtensions/',\n    'http://taptrix.com/vectorillustrator/svg_extensions',\n    'http://www.figma.com/figma/ns',\n    'http://purl.org/dc/elements/1.1/',\n    'http://creativecommons.org/ns#',\n    'http://www.w3.org/1999/02/22-rdf-syntax-ns#',\n    'http://www.serif.com/',\n    'http://www.vector.evaxdesign.sk'\n];\n\n// http://www.w3.org/TR/SVG11/linking.html#processingIRI\nexports.referencesProps = [\n    'clip-path',\n    'color-profile',\n    'fill',\n    'filter',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke',\n    'style'\n];\n\n// http://www.w3.org/TR/SVG11/propidx.html\nexports.inheritableAttrs = [\n    'clip-rule',\n    'color',\n    'color-interpolation',\n    'color-interpolation-filters',\n    'color-profile',\n    'color-rendering',\n    'cursor',\n    'direction',\n    'dominant-baseline',\n    'fill',\n    'fill-opacity',\n    'fill-rule',\n    'font',\n    'font-family',\n    'font-size',\n    'font-size-adjust',\n    'font-stretch',\n    'font-style',\n    'font-variant',\n    'font-weight',\n    'glyph-orientation-horizontal',\n    'glyph-orientation-vertical',\n    'image-rendering',\n    'letter-spacing',\n    'marker',\n    'marker-end',\n    'marker-mid',\n    'marker-start',\n    'paint-order',\n    'pointer-events',\n    'shape-rendering',\n    'stroke',\n    'stroke-dasharray',\n    'stroke-dashoffset',\n    'stroke-linecap',\n    'stroke-linejoin',\n    'stroke-miterlimit',\n    'stroke-opacity',\n    'stroke-width',\n    'text-anchor',\n    'text-rendering',\n    'transform',\n    'visibility',\n    'word-spacing',\n    'writing-mode'\n];\n\nexports.presentationNonInheritableGroupAttrs = [\n    'display',\n    'clip-path',\n    'filter',\n    'mask',\n    'opacity',\n    'text-decoration',\n    'transform',\n    'unicode-bidi',\n    'visibility'\n];\n\n// http://www.w3.org/TR/SVG11/single-page.html#types-ColorKeywords\nexports.colorsNames = {\n    'aliceblue': '#f0f8ff',\n    'antiquewhite': '#faebd7',\n    'aqua': '#0ff',\n    'aquamarine': '#7fffd4',\n    'azure': '#f0ffff',\n    'beige': '#f5f5dc',\n    'bisque': '#ffe4c4',\n    'black': '#000',\n    'blanchedalmond': '#ffebcd',\n    'blue': '#00f',\n    'blueviolet': '#8a2be2',\n    'brown': '#a52a2a',\n    'burlywood': '#deb887',\n    'cadetblue': '#5f9ea0',\n    'chartreuse': '#7fff00',\n    'chocolate': '#d2691e',\n    'coral': '#ff7f50',\n    'cornflowerblue': '#6495ed',\n    'cornsilk': '#fff8dc',\n    'crimson': '#dc143c',\n    'cyan': '#0ff',\n    'darkblue': '#00008b',\n    'darkcyan': '#008b8b',\n    'darkgoldenrod': '#b8860b',\n    'darkgray': '#a9a9a9',\n    'darkgreen': '#006400',\n    'darkgrey': '#a9a9a9',\n    'darkkhaki': '#bdb76b',\n    'darkmagenta': '#8b008b',\n    'darkolivegreen': '#556b2f',\n    'darkorange': '#ff8c00',\n    'darkorchid': '#9932cc',\n    'darkred': '#8b0000',\n    'darksalmon': '#e9967a',\n    'darkseagreen': '#8fbc8f',\n    'darkslateblue': '#483d8b',\n    'darkslategray': '#2f4f4f',\n    'darkslategrey': '#2f4f4f',\n    'darkturquoise': '#00ced1',\n    'darkviolet': '#9400d3',\n    'deeppink': '#ff1493',\n    'deepskyblue': '#00bfff',\n    'dimgray': '#696969',\n    'dimgrey': '#696969',\n    'dodgerblue': '#1e90ff',\n    'firebrick': '#b22222',\n    'floralwhite': '#fffaf0',\n    'forestgreen': '#228b22',\n    'fuchsia': '#f0f',\n    'gainsboro': '#dcdcdc',\n    'ghostwhite': '#f8f8ff',\n    'gold': '#ffd700',\n    'goldenrod': '#daa520',\n    'gray': '#808080',\n    'green': '#008000',\n    'greenyellow': '#adff2f',\n    'grey': '#808080',\n    'honeydew': '#f0fff0',\n    'hotpink': '#ff69b4',\n    'indianred': '#cd5c5c',\n    'indigo': '#4b0082',\n    'ivory': '#fffff0',\n    'khaki': '#f0e68c',\n    'lavender': '#e6e6fa',\n    'lavenderblush': '#fff0f5',\n    'lawngreen': '#7cfc00',\n    'lemonchiffon': '#fffacd',\n    'lightblue': '#add8e6',\n    'lightcoral': '#f08080',\n    'lightcyan': '#e0ffff',\n    'lightgoldenrodyellow': '#fafad2',\n    'lightgray': '#d3d3d3',\n    'lightgreen': '#90ee90',\n    'lightgrey': '#d3d3d3',\n    'lightpink': '#ffb6c1',\n    'lightsalmon': '#ffa07a',\n    'lightseagreen': '#20b2aa',\n    'lightskyblue': '#87cefa',\n    'lightslategray': '#789',\n    'lightslategrey': '#789',\n    'lightsteelblue': '#b0c4de',\n    'lightyellow': '#ffffe0',\n    'lime': '#0f0',\n    'limegreen': '#32cd32',\n    'linen': '#faf0e6',\n    'magenta': '#f0f',\n    'maroon': '#800000',\n    'mediumaquamarine': '#66cdaa',\n    'mediumblue': '#0000cd',\n    'mediumorchid': '#ba55d3',\n    'mediumpurple': '#9370db',\n    'mediumseagreen': '#3cb371',\n    'mediumslateblue': '#7b68ee',\n    'mediumspringgreen': '#00fa9a',\n    'mediumturquoise': '#48d1cc',\n    'mediumvioletred': '#c71585',\n    'midnightblue': '#191970',\n    'mintcream': '#f5fffa',\n    'mistyrose': '#ffe4e1',\n    'moccasin': '#ffe4b5',\n    'navajowhite': '#ffdead',\n    'navy': '#000080',\n    'oldlace': '#fdf5e6',\n    'olive': '#808000',\n    'olivedrab': '#6b8e23',\n    'orange': '#ffa500',\n    'orangered': '#ff4500',\n    'orchid': '#da70d6',\n    'palegoldenrod': '#eee8aa',\n    'palegreen': '#98fb98',\n    'paleturquoise': '#afeeee',\n    'palevioletred': '#db7093',\n    'papayawhip': '#ffefd5',\n    'peachpuff': '#ffdab9',\n    'peru': '#cd853f',\n    'pink': '#ffc0cb',\n    'plum': '#dda0dd',\n    'powderblue': '#b0e0e6',\n    'purple': '#800080',\n    'rebeccapurple': '#639',\n    'red': '#f00',\n    'rosybrown': '#bc8f8f',\n    'royalblue': '#4169e1',\n    'saddlebrown': '#8b4513',\n    'salmon': '#fa8072',\n    'sandybrown': '#f4a460',\n    'seagreen': '#2e8b57',\n    'seashell': '#fff5ee',\n    'sienna': '#a0522d',\n    'silver': '#c0c0c0',\n    'skyblue': '#87ceeb',\n    'slateblue': '#6a5acd',\n    'slategray': '#708090',\n    'slategrey': '#708090',\n    'snow': '#fffafa',\n    'springgreen': '#00ff7f',\n    'steelblue': '#4682b4',\n    'tan': '#d2b48c',\n    'teal': '#008080',\n    'thistle': '#d8bfd8',\n    'tomato': '#ff6347',\n    'turquoise': '#40e0d0',\n    'violet': '#ee82ee',\n    'wheat': '#f5deb3',\n    'white': '#fff',\n    'whitesmoke': '#f5f5f5',\n    'yellow': '#ff0',\n    'yellowgreen': '#9acd32'\n};\n\nexports.colorsShortNames = {\n  '#f0ffff': 'azure',\n  '#f5f5dc': 'beige',\n  '#ffe4c4': 'bisque',\n  '#a52a2a': 'brown',\n  '#ff7f50': 'coral',\n  '#ffd700': 'gold',\n  '#808080': 'gray',\n  '#008000': 'green',\n  '#4b0082': 'indigo',\n  '#fffff0': 'ivory',\n  '#f0e68c': 'khaki',\n  '#faf0e6': 'linen',\n  '#800000': 'maroon',\n  '#000080': 'navy',\n  '#808000': 'olive',\n  '#ffa500': 'orange',\n  '#da70d6': 'orchid',\n  '#cd853f': 'peru',\n  '#ffc0cb': 'pink',\n  '#dda0dd': 'plum',\n  '#800080': 'purple',\n  '#f00': 'red',\n  '#ff0000': 'red',\n  '#fa8072': 'salmon',\n  '#a0522d': 'sienna',\n  '#c0c0c0': 'silver',\n  '#fffafa': 'snow',\n  '#d2b48c': 'tan',\n  '#008080': 'teal',\n  '#ff6347': 'tomato',\n  '#ee82ee': 'violet',\n  '#f5deb3': 'wheat'\n};\n\n// http://www.w3.org/TR/SVG11/single-page.html#types-DataTypeColor\nexports.colorsProps = [\n    'color', 'fill', 'stroke', 'stop-color', 'flood-color', 'lighting-color'\n];\n"]}