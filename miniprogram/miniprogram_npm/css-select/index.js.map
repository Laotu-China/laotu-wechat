{"version":3,"sources":["index.js","lib/compile.js","lib/sort.js","lib/procedure.json","lib/general.js","lib/attributes.js","lib/pseudos.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AGTA,ADGA,ADGA;AFOA,ACHA,AGTA,ADGA,ADGA;AFOA,ACHA,AGTA,ADGA,ADGA;AFOA,AKfA,AJYA,AGTA,ADGA,ADGA;AFOA,AKfA,AJYA,AGTA,ADGA,ADGA;AFOA,AKfA,AJYA,AGTA,ADGA,ADGA;AFOA,AKfA,AJYA,AGTA,ADGA,AGTA,AJYA;AFOA,AKfA,AJYA,AGTA,ADGA,AGTA,AJYA;AFOA,AKfA,AJYA,AGTA,ADGA,AGTA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA,AJYA;AFOA,AKfA,AJYA,AGTA,AENA;ANmBA,AKfA,AJYA,AGTA,AENA;ANmBA,AKfA,AJYA,AGTA,AENA;ANmBA,AKfA,AJYA,AGTA,AENA;ANmBA,AKfA,AJYA,AGTA,AENA;ANmBA,AKfA,AJYA,AGTA,AENA;ANmBA,AKfA,AJYA,AGTA,AENA;ANmBA,AKffA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ADIA,AJYA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKfA;ALgBA,AKffile":"index.js","sourcesContent":["\n\nmodule.exports = CSSselect;\n\nvar DomUtils = require(\"domutils\");\nvar falseFunc = require(\"boolbase\").falseFunc;\nvar compileRaw = require(\"./lib/compile.js\");\n\nfunction wrapCompile(func) {\n    return function addAdapter(selector, options, context) {\n        options = options || {};\n        options.adapter = options.adapter || DomUtils;\n\n        return func(selector, options, context);\n    };\n}\n\nvar compile = wrapCompile(compileRaw);\nvar compileUnsafe = wrapCompile(compileRaw.compileUnsafe);\n\nfunction getSelectorFunc(searchFunc) {\n    return function select(query, elems, options) {\n        options = options || {};\n        options.adapter = options.adapter || DomUtils;\n\n        if (typeof query !== \"function\") {\n            query = compileUnsafe(query, options, elems);\n        }\n        if (query.shouldTestNextSiblings) {\n            elems = appendNextSiblings((options && options.context) || elems, options.adapter);\n        }\n        if (!Array.isArray(elems)) elems = options.adapter.getChildren(elems);\n        else elems = options.adapter.removeSubsets(elems);\n        return searchFunc(query, elems, options);\n    };\n}\n\nfunction getNextSiblings(elem, adapter) {\n    var siblings = adapter.getSiblings(elem);\n    if (!Array.isArray(siblings)) return [];\n    siblings = siblings.slice(0);\n    while (siblings.shift() !== elem);\n    return siblings;\n}\n\nfunction appendNextSiblings(elems, adapter) {\n    // Order matters because jQuery seems to check the children before the siblings\n    if (!Array.isArray(elems)) elems = [elems];\n    var newElems = elems.slice(0);\n\n    for (var i = 0, len = elems.length; i < len; i++) {\n        var nextSiblings = getNextSiblings(newElems[i], adapter);\n        newElems.push.apply(newElems, nextSiblings);\n    }\n    return newElems;\n}\n\nvar selectAll = getSelectorFunc(function selectAll(query, elems, options) {\n    return query === falseFunc || !elems || elems.length === 0 ? [] : options.adapter.findAll(query, elems);\n});\n\nvar selectOne = getSelectorFunc(function selectOne(query, elems, options) {\n    return query === falseFunc || !elems || elems.length === 0 ? null : options.adapter.findOne(query, elems);\n});\n\nfunction is(elem, query, options) {\n    options = options || {};\n    options.adapter = options.adapter || DomUtils;\n    return (typeof query === \"function\" ? query : compile(query, options))(elem);\n}\n\n/*\n\tthe exported interface\n*/\nfunction CSSselect(query, elems, options) {\n    return selectAll(query, elems, options);\n}\n\nCSSselect.compile = compile;\nCSSselect.filters = compileRaw.Pseudos.filters;\nCSSselect.pseudos = compileRaw.Pseudos.pseudos;\n\nCSSselect.selectAll = selectAll;\nCSSselect.selectOne = selectOne;\n\nCSSselect.is = is;\n\n//legacy methods (might be removed)\nCSSselect.parse = compile;\nCSSselect.iterate = selectAll;\n\n//hooks\nCSSselect._compileUnsafe = compileUnsafe;\nCSSselect._compileToken = compileRaw.compileToken;\n","/*\n\tcompiles a selector to an executable function\n*/\n\nmodule.exports = compile;\n\nvar parse = require(\"css-what\").parse;\nvar BaseFuncs = require(\"boolbase\");\nvar sortRules = require(\"./sort.js\");\nvar procedure = require(\"./procedure.json\");\nvar Rules = require(\"./general.js\");\nvar Pseudos = require(\"./pseudos.js\");\nvar trueFunc = BaseFuncs.trueFunc;\nvar falseFunc = BaseFuncs.falseFunc;\n\nvar filters = Pseudos.filters;\n\nfunction compile(selector, options, context) {\n    var next = compileUnsafe(selector, options, context);\n    return wrap(next, options);\n}\n\nfunction wrap(next, options) {\n    var adapter = options.adapter;\n\n    return function base(elem) {\n        return adapter.isTag(elem) && next(elem);\n    };\n}\n\nfunction compileUnsafe(selector, options, context) {\n    var token = parse(selector, options);\n    return compileToken(token, options, context);\n}\n\nfunction includesScopePseudo(t) {\n    return (\n        t.type === \"pseudo\" &&\n        (t.name === \"scope\" ||\n            (Array.isArray(t.data) &&\n                t.data.some(function(data) {\n                    return data.some(includesScopePseudo);\n                })))\n    );\n}\n\nvar DESCENDANT_TOKEN = { type: \"descendant\" };\nvar FLEXIBLE_DESCENDANT_TOKEN = { type: \"_flexibleDescendant\" };\nvar SCOPE_TOKEN = { type: \"pseudo\", name: \"scope\" };\nvar PLACEHOLDER_ELEMENT = {};\n\n//CSS 4 Spec (Draft): 3.3.1. Absolutizing a Scope-relative Selector\n//http://www.w3.org/TR/selectors4/#absolutizing\nfunction absolutize(token, options, context) {\n    var adapter = options.adapter;\n\n    //TODO better check if context is document\n    var hasContext =\n        !!context &&\n        !!context.length &&\n        context.every(function(e) {\n            return e === PLACEHOLDER_ELEMENT || !!adapter.getParent(e);\n        });\n\n    token.forEach(function(t) {\n        if (t.length > 0 && isTraversal(t[0]) && t[0].type !== \"descendant\") {\n            //don't return in else branch\n        } else if (hasContext && !(Array.isArray(t) ? t.some(includesScopePseudo) : includesScopePseudo(t))) {\n            t.unshift(DESCENDANT_TOKEN);\n        } else {\n            return;\n        }\n\n        t.unshift(SCOPE_TOKEN);\n    });\n}\n\nfunction compileToken(token, options, context) {\n    token = token.filter(function(t) {\n        return t.length > 0;\n    });\n\n    token.forEach(sortRules);\n\n    var isArrayContext = Array.isArray(context);\n\n    context = (options && options.context) || context;\n\n    if (context && !isArrayContext) context = [context];\n\n    absolutize(token, options, context);\n\n    var shouldTestNextSiblings = false;\n\n    var query = token\n        .map(function(rules) {\n            if (rules[0] && rules[1] && rules[0].name === \"scope\") {\n                var ruleType = rules[1].type;\n                if (isArrayContext && ruleType === \"descendant\") {\n                    rules[1] = FLEXIBLE_DESCENDANT_TOKEN;\n                } else if (ruleType === \"adjacent\" || ruleType === \"sibling\") {\n                    shouldTestNextSiblings = true;\n                }\n            }\n            return compileRules(rules, options, context);\n        })\n        .reduce(reduceRules, falseFunc);\n\n    query.shouldTestNextSiblings = shouldTestNextSiblings;\n\n    return query;\n}\n\nfunction isTraversal(t) {\n    return procedure[t.type] < 0;\n}\n\nfunction compileRules(rules, options, context) {\n    return rules.reduce(function(func, rule) {\n        if (func === falseFunc) return func;\n\n        if (!(rule.type in Rules)) {\n            throw new Error(\"Rule type \" + rule.type + \" is not supported by css-select\");\n        }\n\n        return Rules[rule.type](func, rule, options, context);\n    }, (options && options.rootFunc) || trueFunc);\n}\n\nfunction reduceRules(a, b) {\n    if (b === falseFunc || a === trueFunc) {\n        return a;\n    }\n    if (a === falseFunc || b === trueFunc) {\n        return b;\n    }\n\n    return function combine(elem) {\n        return a(elem) || b(elem);\n    };\n}\n\nfunction containsTraversal(t) {\n    return t.some(isTraversal);\n}\n\n//:not, :has and :matches have to compile selectors\n//doing this in lib/pseudos.js would lead to circular dependencies,\n//so we add them here\nfilters.not = function(next, token, options, context) {\n    var opts = {\n        xmlMode: !!(options && options.xmlMode),\n        strict: !!(options && options.strict),\n        adapter: options.adapter\n    };\n\n    if (opts.strict) {\n        if (token.length > 1 || token.some(containsTraversal)) {\n            throw new Error(\"complex selectors in :not aren't allowed in strict mode\");\n        }\n    }\n\n    var func = compileToken(token, opts, context);\n\n    if (func === falseFunc) return next;\n    if (func === trueFunc) return falseFunc;\n\n    return function not(elem) {\n        return !func(elem) && next(elem);\n    };\n};\n\nfilters.has = function(next, token, options) {\n    var adapter = options.adapter;\n    var opts = {\n        xmlMode: !!(options && options.xmlMode),\n        strict: !!(options && options.strict),\n        adapter: adapter\n    };\n\n    //FIXME: Uses an array as a pointer to the current element (side effects)\n    var context = token.some(containsTraversal) ? [PLACEHOLDER_ELEMENT] : null;\n\n    var func = compileToken(token, opts, context);\n\n    if (func === falseFunc) return falseFunc;\n    if (func === trueFunc) {\n        return function hasChild(elem) {\n            return adapter.getChildren(elem).some(adapter.isTag) && next(elem);\n        };\n    }\n\n    func = wrap(func, options);\n\n    if (context) {\n        return function has(elem) {\n            return next(elem) && ((context[0] = elem), adapter.existsOne(func, adapter.getChildren(elem)));\n        };\n    }\n\n    return function has(elem) {\n        return next(elem) && adapter.existsOne(func, adapter.getChildren(elem));\n    };\n};\n\nfilters.matches = function(next, token, options, context) {\n    var opts = {\n        xmlMode: !!(options && options.xmlMode),\n        strict: !!(options && options.strict),\n        rootFunc: next,\n        adapter: options.adapter\n    };\n\n    return compileToken(token, opts, context);\n};\n\ncompile.compileToken = compileToken;\ncompile.compileUnsafe = compileUnsafe;\ncompile.Pseudos = Pseudos;\n","module.exports = sortByProcedure;\n\n/*\n\tsort the parts of the passed selector,\n\tas there is potential for optimization\n\t(some types of selectors are faster than others)\n*/\n\nvar procedure = require(\"./procedure.json\");\n\nvar attributes = {\n    __proto__: null,\n    exists: 10,\n    equals: 8,\n    not: 7,\n    start: 6,\n    end: 6,\n    any: 5,\n    hyphen: 4,\n    element: 4\n};\n\nfunction sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n    for (var i = 1; i < arr.length; i++) {\n        var procNew = procs[i];\n\n        if (procNew < 0) continue;\n\n        for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n            var token = arr[j + 1];\n            arr[j + 1] = arr[j];\n            arr[j] = token;\n            procs[j + 1] = procs[j];\n            procs[j] = procNew;\n        }\n    }\n}\n\nfunction getProcedure(token) {\n    var proc = procedure[token.type];\n\n    if (proc === procedure.attribute) {\n        proc = attributes[token.action];\n\n        if (proc === attributes.equals && token.name === \"id\") {\n            //prefer ID selectors (eg. #ID)\n            proc = 9;\n        }\n\n        if (token.ignoreCase) {\n            //ignoreCase adds some overhead, prefer \"normal\" token\n            //this is a binary operation, to ensure it's still an int\n            proc >>= 1;\n        }\n    } else if (proc === procedure.pseudo) {\n        if (!token.data) {\n            proc = 3;\n        } else if (token.name === \"has\" || token.name === \"contains\") {\n            proc = 0; //expensive in any case\n        } else if (token.name === \"matches\" || token.name === \"not\") {\n            proc = 0;\n            for (var i = 0; i < token.data.length; i++) {\n                //TODO better handling of complex selectors\n                if (token.data[i].length !== 1) continue;\n                var cur = getProcedure(token.data[i][0]);\n                //avoid executing :has or :contains\n                if (cur === 0) {\n                    proc = 0;\n                    break;\n                }\n                if (cur > proc) proc = cur;\n            }\n            if (token.data.length > 1 && proc > 0) proc -= 1;\n        } else {\n            proc = 1;\n        }\n    }\n    return proc;\n}\n","module.exports = {\n\t\"universal\": 50,\n\t\"tag\": 30,\n\t\"attribute\": 1,\n\t\"pseudo\": 0,\n\t\"descendant\": -1,\n\t\"child\": -1,\n\t\"parent\": -1,\n\t\"sibling\": -1,\n\t\"adjacent\": -1\n}\n","var attributes = require(\"./attributes.js\");\nvar Pseudos = require(\"./pseudos\");\n\n/*\n\tall available rules\n*/\nmodule.exports = {\n    __proto__: null,\n\n    attribute: attributes.compile,\n    pseudo: Pseudos.compile,\n\n    //tags\n    tag: function(next, data, options) {\n        var name = data.name;\n        var adapter = options.adapter;\n\n        return function tag(elem) {\n            return adapter.getName(elem) === name && next(elem);\n        };\n    },\n\n    //traversal\n    descendant: function(next, data, options) {\n        // eslint-disable-next-line no-undef\n        var isFalseCache = typeof WeakSet !== \"undefined\" ? new WeakSet() : null;\n        var adapter = options.adapter;\n\n        return function descendant(elem) {\n            var found = false;\n\n            while (!found && (elem = adapter.getParent(elem))) {\n                if (!isFalseCache || !isFalseCache.has(elem)) {\n                    found = next(elem);\n                    if (!found && isFalseCache) {\n                        isFalseCache.add(elem);\n                    }\n                }\n            }\n\n            return found;\n        };\n    },\n    _flexibleDescendant: function(next, data, options) {\n        var adapter = options.adapter;\n\n        // Include element itself, only used while querying an array\n        return function descendant(elem) {\n            var found = next(elem);\n\n            while (!found && (elem = adapter.getParent(elem))) {\n                found = next(elem);\n            }\n\n            return found;\n        };\n    },\n    parent: function(next, data, options) {\n        if (options && options.strict) {\n            throw new Error(\"Parent selector isn't part of CSS3\");\n        }\n\n        var adapter = options.adapter;\n\n        return function parent(elem) {\n            return adapter.getChildren(elem).some(test);\n        };\n\n        function test(elem) {\n            return adapter.isTag(elem) && next(elem);\n        }\n    },\n    child: function(next, data, options) {\n        var adapter = options.adapter;\n\n        return function child(elem) {\n            var parent = adapter.getParent(elem);\n            return !!parent && next(parent);\n        };\n    },\n    sibling: function(next, data, options) {\n        var adapter = options.adapter;\n\n        return function sibling(elem) {\n            var siblings = adapter.getSiblings(elem);\n\n            for (var i = 0; i < siblings.length; i++) {\n                if (adapter.isTag(siblings[i])) {\n                    if (siblings[i] === elem) break;\n                    if (next(siblings[i])) return true;\n                }\n            }\n\n            return false;\n        };\n    },\n    adjacent: function(next, data, options) {\n        var adapter = options.adapter;\n\n        return function adjacent(elem) {\n            var siblings = adapter.getSiblings(elem),\n                lastElement;\n\n            for (var i = 0; i < siblings.length; i++) {\n                if (adapter.isTag(siblings[i])) {\n                    if (siblings[i] === elem) break;\n                    lastElement = siblings[i];\n                }\n            }\n\n            return !!lastElement && next(lastElement);\n        };\n    },\n    universal: function(next) {\n        return next;\n    }\n};\n","var falseFunc = require(\"boolbase\").falseFunc;\n\n//https://github.com/slevithan/XRegExp/blob/master/src/xregexp.js#L469\nvar reChars = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n\n/*\n\tattribute selectors\n*/\nvar attributeRules = {\n    __proto__: null,\n    equals: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var adapter = options.adapter;\n\n        if (data.ignoreCase) {\n            value = value.toLowerCase();\n\n            return function equalsIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.toLowerCase() === value && next(elem);\n            };\n        }\n\n        return function equals(elem) {\n            return adapter.getAttributeValue(elem, name) === value && next(elem);\n        };\n    },\n    hyphen: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var len = value.length;\n        var adapter = options.adapter;\n\n        if (data.ignoreCase) {\n            value = value.toLowerCase();\n\n            return function hyphenIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return (\n                    attr != null &&\n                    (attr.length === len || attr.charAt(len) === \"-\") &&\n                    attr.substr(0, len).toLowerCase() === value &&\n                    next(elem)\n                );\n            };\n        }\n\n        return function hyphen(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return (\n                attr != null &&\n                attr.substr(0, len) === value &&\n                (attr.length === len || attr.charAt(len) === \"-\") &&\n                next(elem)\n            );\n        };\n    },\n    element: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var adapter = options.adapter;\n\n        if (/\\s/.test(value)) {\n            return falseFunc;\n        }\n\n        value = value.replace(reChars, \"\\\\$&\");\n\n        var pattern = \"(?:^|\\\\s)\" + value + \"(?:$|\\\\s)\",\n            flags = data.ignoreCase ? \"i\" : \"\",\n            regex = new RegExp(pattern, flags);\n\n        return function element(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return attr != null && regex.test(attr) && next(elem);\n        };\n    },\n    exists: function(next, data, options) {\n        var name = data.name;\n        var adapter = options.adapter;\n\n        return function exists(elem) {\n            return adapter.hasAttrib(elem, name) && next(elem);\n        };\n    },\n    start: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var len = value.length;\n        var adapter = options.adapter;\n\n        if (len === 0) {\n            return falseFunc;\n        }\n\n        if (data.ignoreCase) {\n            value = value.toLowerCase();\n\n            return function startIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.substr(0, len).toLowerCase() === value && next(elem);\n            };\n        }\n\n        return function start(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return attr != null && attr.substr(0, len) === value && next(elem);\n        };\n    },\n    end: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var len = -value.length;\n        var adapter = options.adapter;\n\n        if (len === 0) {\n            return falseFunc;\n        }\n\n        if (data.ignoreCase) {\n            value = value.toLowerCase();\n\n            return function endIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.substr(len).toLowerCase() === value && next(elem);\n            };\n        }\n\n        return function end(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return attr != null && attr.substr(len) === value && next(elem);\n        };\n    },\n    any: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var adapter = options.adapter;\n\n        if (value === \"\") {\n            return falseFunc;\n        }\n\n        if (data.ignoreCase) {\n            var regex = new RegExp(value.replace(reChars, \"\\\\$&\"), \"i\");\n\n            return function anyIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return attr != null && regex.test(attr) && next(elem);\n            };\n        }\n\n        return function any(elem) {\n            var attr = adapter.getAttributeValue(elem, name);\n            return attr != null && attr.indexOf(value) >= 0 && next(elem);\n        };\n    },\n    not: function(next, data, options) {\n        var name = data.name;\n        var value = data.value;\n        var adapter = options.adapter;\n\n        if (value === \"\") {\n            return function notEmpty(elem) {\n                return !!adapter.getAttributeValue(elem, name) && next(elem);\n            };\n        } else if (data.ignoreCase) {\n            value = value.toLowerCase();\n\n            return function notIC(elem) {\n                var attr = adapter.getAttributeValue(elem, name);\n                return attr != null && attr.toLowerCase() !== value && next(elem);\n            };\n        }\n\n        return function not(elem) {\n            return adapter.getAttributeValue(elem, name) !== value && next(elem);\n        };\n    }\n};\n\nmodule.exports = {\n    compile: function(next, data, options) {\n        if (options && options.strict && (data.ignoreCase || data.action === \"not\")) {\n            throw new Error(\"Unsupported attribute selector\");\n        }\n        return attributeRules[data.action](next, data, options);\n    },\n    rules: attributeRules\n};\n","/*\n\tpseudo selectors\n\n\t---\n\n\tthey are available in two forms:\n\t* filters called when the selector\n\t  is compiled and return a function\n\t  that needs to return next()\n\t* pseudos get called on execution\n\t  they need to return a boolean\n*/\n\nvar getNCheck = require(\"nth-check\");\nvar BaseFuncs = require(\"boolbase\");\nvar attributes = require(\"./attributes.js\");\nvar trueFunc = BaseFuncs.trueFunc;\nvar falseFunc = BaseFuncs.falseFunc;\n\nvar checkAttrib = attributes.rules.equals;\n\nfunction getAttribFunc(name, value) {\n    var data = { name: name, value: value };\n    return function attribFunc(next, rule, options) {\n        return checkAttrib(next, data, options);\n    };\n}\n\nfunction getChildFunc(next, adapter) {\n    return function(elem) {\n        return !!adapter.getParent(elem) && next(elem);\n    };\n}\n\nvar filters = {\n    contains: function(next, text, options) {\n        var adapter = options.adapter;\n\n        return function contains(elem) {\n            return next(elem) && adapter.getText(elem).indexOf(text) >= 0;\n        };\n    },\n    icontains: function(next, text, options) {\n        var itext = text.toLowerCase();\n        var adapter = options.adapter;\n\n        return function icontains(elem) {\n            return (\n                next(elem) &&\n                adapter\n                    .getText(elem)\n                    .toLowerCase()\n                    .indexOf(itext) >= 0\n            );\n        };\n    },\n\n    //location specific methods\n    \"nth-child\": function(next, rule, options) {\n        var func = getNCheck(rule);\n        var adapter = options.adapter;\n\n        if (func === falseFunc) return func;\n        if (func === trueFunc) return getChildFunc(next, adapter);\n\n        return function nthChild(elem) {\n            var siblings = adapter.getSiblings(elem);\n\n            for (var i = 0, pos = 0; i < siblings.length; i++) {\n                if (adapter.isTag(siblings[i])) {\n                    if (siblings[i] === elem) break;\n                    else pos++;\n                }\n            }\n\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-child\": function(next, rule, options) {\n        var func = getNCheck(rule);\n        var adapter = options.adapter;\n\n        if (func === falseFunc) return func;\n        if (func === trueFunc) return getChildFunc(next, adapter);\n\n        return function nthLastChild(elem) {\n            var siblings = adapter.getSiblings(elem);\n\n            for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {\n                if (adapter.isTag(siblings[i])) {\n                    if (siblings[i] === elem) break;\n                    else pos++;\n                }\n            }\n\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-of-type\": function(next, rule, options) {\n        var func = getNCheck(rule);\n        var adapter = options.adapter;\n\n        if (func === falseFunc) return func;\n        if (func === trueFunc) return getChildFunc(next, adapter);\n\n        return function nthOfType(elem) {\n            var siblings = adapter.getSiblings(elem);\n\n            for (var pos = 0, i = 0; i < siblings.length; i++) {\n                if (adapter.isTag(siblings[i])) {\n                    if (siblings[i] === elem) break;\n                    if (adapter.getName(siblings[i]) === adapter.getName(elem)) pos++;\n                }\n            }\n\n            return func(pos) && next(elem);\n        };\n    },\n    \"nth-last-of-type\": function(next, rule, options) {\n        var func = getNCheck(rule);\n        var adapter = options.adapter;\n\n        if (func === falseFunc) return func;\n        if (func === trueFunc) return getChildFunc(next, adapter);\n\n        return function nthLastOfType(elem) {\n            var siblings = adapter.getSiblings(elem);\n\n            for (var pos = 0, i = siblings.length - 1; i >= 0; i--) {\n                if (adapter.isTag(siblings[i])) {\n                    if (siblings[i] === elem) break;\n                    if (adapter.getName(siblings[i]) === adapter.getName(elem)) pos++;\n                }\n            }\n\n            return func(pos) && next(elem);\n        };\n    },\n\n    //TODO determine the actual root element\n    root: function(next, rule, options) {\n        var adapter = options.adapter;\n\n        return function(elem) {\n            return !adapter.getParent(elem) && next(elem);\n        };\n    },\n\n    scope: function(next, rule, options, context) {\n        var adapter = options.adapter;\n\n        if (!context || context.length === 0) {\n            //equivalent to :root\n            return filters.root(next, rule, options);\n        }\n\n        function equals(a, b) {\n            if (typeof adapter.equals === \"function\") return adapter.equals(a, b);\n\n            return a === b;\n        }\n\n        if (context.length === 1) {\n            //NOTE: can't be unpacked, as :has uses this for side-effects\n            return function(elem) {\n                return equals(context[0], elem) && next(elem);\n            };\n        }\n\n        return function(elem) {\n            return context.indexOf(elem) >= 0 && next(elem);\n        };\n    },\n\n    //jQuery extensions (others follow as pseudos)\n    checkbox: getAttribFunc(\"type\", \"checkbox\"),\n    file: getAttribFunc(\"type\", \"file\"),\n    password: getAttribFunc(\"type\", \"password\"),\n    radio: getAttribFunc(\"type\", \"radio\"),\n    reset: getAttribFunc(\"type\", \"reset\"),\n    image: getAttribFunc(\"type\", \"image\"),\n    submit: getAttribFunc(\"type\", \"submit\"),\n\n    //dynamic state pseudos. These depend on optional Adapter methods.\n    hover: function(next, rule, options) {\n        var adapter = options.adapter;\n\n        if (typeof adapter.isHovered === 'function') {\n            return function hover(elem) {\n                return next(elem) && adapter.isHovered(elem);\n            };\n        }\n\n        return falseFunc;\n    },\n    visited: function(next, rule, options) {\n        var adapter = options.adapter;\n\n        if (typeof adapter.isVisited === 'function') {\n            return function visited(elem) {\n                return next(elem) && adapter.isVisited(elem);\n            };\n        }\n\n        return falseFunc;\n    },\n    active: function(next, rule, options) {\n        var adapter = options.adapter;\n\n        if (typeof adapter.isActive === 'function') {\n            return function active(elem) {\n                return next(elem) && adapter.isActive(elem);\n            };\n        }\n\n        return falseFunc;\n    }\n};\n\n//helper methods\nfunction getFirstElement(elems, adapter) {\n    for (var i = 0; elems && i < elems.length; i++) {\n        if (adapter.isTag(elems[i])) return elems[i];\n    }\n}\n\n//while filters are precompiled, pseudos get called when they are needed\nvar pseudos = {\n    empty: function(elem, adapter) {\n        return !adapter.getChildren(elem).some(function(elem) {\n            return adapter.isTag(elem) || elem.type === \"text\";\n        });\n    },\n\n    \"first-child\": function(elem, adapter) {\n        return getFirstElement(adapter.getSiblings(elem), adapter) === elem;\n    },\n    \"last-child\": function(elem, adapter) {\n        var siblings = adapter.getSiblings(elem);\n\n        for (var i = siblings.length - 1; i >= 0; i--) {\n            if (siblings[i] === elem) return true;\n            if (adapter.isTag(siblings[i])) break;\n        }\n\n        return false;\n    },\n    \"first-of-type\": function(elem, adapter) {\n        var siblings = adapter.getSiblings(elem);\n\n        for (var i = 0; i < siblings.length; i++) {\n            if (adapter.isTag(siblings[i])) {\n                if (siblings[i] === elem) return true;\n                if (adapter.getName(siblings[i]) === adapter.getName(elem)) break;\n            }\n        }\n\n        return false;\n    },\n    \"last-of-type\": function(elem, adapter) {\n        var siblings = adapter.getSiblings(elem);\n\n        for (var i = siblings.length - 1; i >= 0; i--) {\n            if (adapter.isTag(siblings[i])) {\n                if (siblings[i] === elem) return true;\n                if (adapter.getName(siblings[i]) === adapter.getName(elem)) break;\n            }\n        }\n\n        return false;\n    },\n    \"only-of-type\": function(elem, adapter) {\n        var siblings = adapter.getSiblings(elem);\n\n        for (var i = 0, j = siblings.length; i < j; i++) {\n            if (adapter.isTag(siblings[i])) {\n                if (siblings[i] === elem) continue;\n                if (adapter.getName(siblings[i]) === adapter.getName(elem)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    },\n    \"only-child\": function(elem, adapter) {\n        var siblings = adapter.getSiblings(elem);\n\n        for (var i = 0; i < siblings.length; i++) {\n            if (adapter.isTag(siblings[i]) && siblings[i] !== elem) return false;\n        }\n\n        return true;\n    },\n\n    //:matches(a, area, link)[href]\n    link: function(elem, adapter) {\n        return adapter.hasAttrib(elem, \"href\");\n    },\n    //TODO: :any-link once the name is finalized (as an alias of :link)\n\n    //forms\n    //to consider: :target\n\n    //:matches([selected], select:not([multiple]):not(> option[selected]) > option:first-of-type)\n    selected: function(elem, adapter) {\n        if (adapter.hasAttrib(elem, \"selected\")) return true;\n        else if (adapter.getName(elem) !== \"option\") return false;\n\n        //the first <option> in a <select> is also selected\n        var parent = adapter.getParent(elem);\n\n        if (!parent || adapter.getName(parent) !== \"select\" || adapter.hasAttrib(parent, \"multiple\")) {\n            return false;\n        }\n\n        var siblings = adapter.getChildren(parent);\n        var sawElem = false;\n\n        for (var i = 0; i < siblings.length; i++) {\n            if (adapter.isTag(siblings[i])) {\n                if (siblings[i] === elem) {\n                    sawElem = true;\n                } else if (!sawElem) {\n                    return false;\n                } else if (adapter.hasAttrib(siblings[i], \"selected\")) {\n                    return false;\n                }\n            }\n        }\n\n        return sawElem;\n    },\n    //https://html.spec.whatwg.org/multipage/scripting.html#disabled-elements\n    //:matches(\n    //  :matches(button, input, select, textarea, menuitem, optgroup, option)[disabled],\n    //  optgroup[disabled] > option),\n    // fieldset[disabled] * //TODO not child of first <legend>\n    //)\n    disabled: function(elem, adapter) {\n        return adapter.hasAttrib(elem, \"disabled\");\n    },\n    enabled: function(elem, adapter) {\n        return !adapter.hasAttrib(elem, \"disabled\");\n    },\n    //:matches(:matches(:radio, :checkbox)[checked], :selected) (TODO menuitem)\n    checked: function(elem, adapter) {\n        return adapter.hasAttrib(elem, \"checked\") || pseudos.selected(elem, adapter);\n    },\n    //:matches(input, select, textarea)[required]\n    required: function(elem, adapter) {\n        return adapter.hasAttrib(elem, \"required\");\n    },\n    //:matches(input, select, textarea):not([required])\n    optional: function(elem, adapter) {\n        return !adapter.hasAttrib(elem, \"required\");\n    },\n\n    //jQuery extensions\n\n    //:not(:empty)\n    parent: function(elem, adapter) {\n        return !pseudos.empty(elem, adapter);\n    },\n    //:matches(h1, h2, h3, h4, h5, h6)\n    header: namePseudo([\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"]),\n\n    //:matches(button, input[type=button])\n    button: function(elem, adapter) {\n        var name = adapter.getName(elem);\n        return (\n            name === \"button\" || (name === \"input\" && adapter.getAttributeValue(elem, \"type\") === \"button\")\n        );\n    },\n    //:matches(input, textarea, select, button)\n    input: namePseudo([\"input\", \"textarea\", \"select\", \"button\"]),\n    //input:matches(:not([type!='']), [type='text' i])\n    text: function(elem, adapter) {\n        var attr;\n        return (\n            adapter.getName(elem) === \"input\" &&\n            (!(attr = adapter.getAttributeValue(elem, \"type\")) || attr.toLowerCase() === \"text\")\n        );\n    }\n};\n\nfunction namePseudo(names) {\n    if (typeof Set !== \"undefined\") {\n        // eslint-disable-next-line no-undef\n        var nameSet = new Set(names);\n\n        return function(elem, adapter) {\n            return nameSet.has(adapter.getName(elem));\n        };\n    }\n\n    return function(elem, adapter) {\n        return names.indexOf(adapter.getName(elem)) >= 0;\n    };\n}\n\nfunction verifyArgs(func, name, subselect) {\n    if (subselect === null) {\n        if (func.length > 2 && name !== \"scope\") {\n            throw new Error(\"pseudo-selector :\" + name + \" requires an argument\");\n        }\n    } else {\n        if (func.length === 2) {\n            throw new Error(\"pseudo-selector :\" + name + \" doesn't have any arguments\");\n        }\n    }\n}\n\n//FIXME this feels hacky\nvar re_CSS3 = /^(?:(?:nth|last|first|only)-(?:child|of-type)|root|empty|(?:en|dis)abled|checked|not)$/;\n\nmodule.exports = {\n    compile: function(next, data, options, context) {\n        var name = data.name;\n        var subselect = data.data;\n        var adapter = options.adapter;\n\n        if (options && options.strict && !re_CSS3.test(name)) {\n            throw new Error(\":\" + name + \" isn't part of CSS3\");\n        }\n\n        if (typeof filters[name] === \"function\") {\n            return filters[name](next, subselect, options, context);\n        } else if (typeof pseudos[name] === \"function\") {\n            var func = pseudos[name];\n\n            verifyArgs(func, name, subselect);\n\n            if (func === falseFunc) {\n                return func;\n            }\n\n            if (next === trueFunc) {\n                return function pseudoRoot(elem) {\n                    return func(elem, adapter, subselect);\n                };\n            }\n\n            return function pseudoArgs(elem) {\n                return func(elem, adapter, subselect) && next(elem);\n            };\n        } else {\n            throw new Error(\"unmatched pseudo-class :\" + name);\n        }\n    },\n    filters: filters,\n    pseudos: pseudos\n};\n"]}